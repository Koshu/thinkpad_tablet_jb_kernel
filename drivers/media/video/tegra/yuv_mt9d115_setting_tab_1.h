#ifndef YUV_SENSOR_TAB_H
#define YUV_SENSOR_TAB_H
#if defined(__cplusplus)
extern "C"
{
#endif

struct sensor_reg {
	u16 addr;
	u16 val;
};

struct sensor_info {
	int mode;
	u16 coarse_time;
	struct i2c_client *i2c_client;
	struct yuv_sensor_platform_data *pdata;
};

static struct sensor_info *info;


static struct sensor_reg mode_1600x1200[] = {
{0x098C, 0xA115},	// MCU_ADDRESS [SEQ_CAP_MODE]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA116},	// MCU_ADDRESS [SEQ_CAP_NUMFRAMES]
{0x0990, 0x000A},	// MCU_DATA_0
// Disable avoid to effect MWB
//{0x098C, 0xA11F},	// MCU_ADDRESS [SEQ_PREVIEW_1_AWB]
//{0x0990, 0x0001},	// MCU_DATA_0
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0002},	// MCU_DATA_0
{SENSOR_WAIT_MS, 50},
{SENSOR_TABLE_END, 0x0000}
}; // End of mode_1600x1200[]

/*  CTS testing will set the largest resolution mode only during testZoom.
 *  Fast switchig function will break the testing and fail.
 *  To workaround this, we need to create a 1600x1200 table
 */
static struct sensor_reg CTS_ZoomTest_mode_1600x1200[] = {
{0x001A, 0x0001},
{SENSOR_WAIT_MS, 10},
{0x001A, 0x0000},
{SENSOR_WAIT_MS, 50},	// delay=50

// select output interface
{0x001A, 0x0050},	// BITFIELD=0x001A, 0x0200, 0 // disable Parallel
{0x001A, 0x0058},	// BITFIELD=0x001A, 0x0008, 1 // MIPI
{0x0014, 0x21F9},	// PLL Control: BYPASS PLL = 8697
{0x0010, 0x0115},	// PLL Dividers = 277
{0x0012, 0x00F5},	// wcd = 8
{0x0014, 0x2545},	// PLL Control: TEST_BYPASS on = 9541
{0x0014, 0x2547},	// PLL Control: PLL_ENABLE on = 9543
{0x0014, 0x2447},	// PLL Control: SEL_LOCK_DET on
{SENSOR_WAIT_MS, 100},	// Delay 1ms to allow PLL to loc
{0x0014, 0x2047},	// PLL Control: PLL_BYPASS off
{0x0014, 0x2046},	// PLL Control: TEST_BYPASS off
{0x0018, 0x402D},	// LOAD=MCU Powerup Stop Enable
{SENSOR_WAIT_MS, 100},	// delay=10
{0x0018, 0x402c},	// LOAD=GO
{SENSOR_WAIT_MS, 100},	// delay=10

{0x098C, 0x2703},	// Output Width (A)
{0x0990, 0x0640},	//       = 1600
{0x098C, 0x2705},	// Output Height (A)
{0x0990, 0x04B0},	//       = 1200
{0x098C, 0x2707},	// Output Width (B)
{0x0990, 0x0640},	//       = 1600
{0x098C, 0x2709},	// Output Height (B)
{0x0990, 0x04B0},	//       = 1200
{0x098C, 0x270D},	// Row Start (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x270F},	// Column Start (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2711},	// Row End (A)
{0x0990, 0x04BB},	//       = 1211
{0x098C, 0x2713},	// Column End (A)
{0x0990, 0x064B},	//       = 1611
{0x098C, 0x2715},	// Row Speed (A)
{0x0990, 0x0111},	//       = 273
{0x098C, 0x2717},	// Read Mode (A)
{0x0990, 0x0024},	//       = 36
{0x098C, 0x2719},	// sensor_fine_correction (A)
{0x0990, 0x003A},	//       = 58
{0x098C, 0x271B},	// sensor_fine_IT_min (A)
{0x0990, 0x00F6},	//       = 246
{0x098C, 0x271D},	// sensor_fine_IT_max_margin (A)
{0x0990, 0x008B},	//       = 139
{0x098C, 0x271F},	// Frame Lines (A)
{0x0990, 0x0521},	//       = 1313
{0x098C, 0x2721},	// Line Length (A)
{0x0990, 0x08EC},	//       = 2284
{0x098C, 0x2723},	// Row Start (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2725},	// Column Start (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2727},	// Row End (B)
{0x0990, 0x04BB},	//       = 1211
{0x098C, 0x2729},	// Column End (B)
{0x0990, 0x064B},	//       = 1611
{0x098C, 0x272B},	// Row Speed (B)
{0x0990, 0x0111},	//       = 273
{0x098C, 0x272D},	// Read Mode (B)
{0x0990, 0x0024},	//       = 36
{0x098C, 0x272F},	// sensor_fine_correction (B)
{0x0990, 0x003A},	//       = 58
{0x098C, 0x2731},	// sensor_fine_IT_min (B)
{0x0990, 0x00F6},	//       = 246
{0x098C, 0x2733},	// sensor_fine_IT_max_margin (B)
{0x0990, 0x008B},	//       = 139
{0x098C, 0x2735},	// Frame Lines (B)
{0x0990, 0x0521},	//       = 1313
{0x098C, 0x2737},	// Line Length (B)
{0x0990, 0x08EC},	//       = 2284
{0x098C, 0x2739},	// Crop_X0 (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x273B},	// Crop_X1 (A)
{0x0990, 0x063F},	//       = 1599
{0x098C, 0x273D},	// Crop_Y0 (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x273F},	// Crop_Y1 (A)
{0x0990, 0x04AF},	//       = 1199
{0x098C, 0x2747},	// Crop_X0 (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2749},	// Crop_X1 (B)
{0x0990, 0x063F},	//       = 1599
{0x098C, 0x274B},	// Crop_Y0 (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x274D},	// Crop_Y1 (B)
{0x0990, 0x04AF},	//       = 1199
{0x098C, 0x222D},	// R9 Step
{0x0990, 0x00C5},	//       = 197
{0x098C, 0xA408},	// search_f1_50
{0x0990, 0x0030},	//       = 48
{0x098C, 0xA409},	// search_f2_50
{0x0990, 0x0032},	//       = 50
{0x098C, 0xA40A},	// search_f1_60
{0x0990, 0x003A},	//       = 58
{0x098C, 0xA40B},	// search_f2_60
{0x0990, 0x003C},	//       = 60
{0x098C, 0x2411},	// R9_Step_60 (A)
{0x0990, 0x0099},	//       = 153
{0x098C, 0x2413},	// R9_Step_50 (A)
{0x0990, 0x00B8},	//       = 184
{0x098C, 0x2415},	// R9_Step_60 (B)
{0x0990, 0x0099},	//       = 153
{0x098C, 0x2417},	// R9_Step_50 (B)
{0x0990, 0x00B8},	//       = 184
{0x098C, 0xA404},	// FD Mode
{0x0990, 0x0010},	//       = 16
{0x098C, 0xA40D},	// Stat_min
{0x0990, 0x0002},	//       = 2
{0x098C, 0xA40E},	// Stat_max
{0x0990, 0x0003},	//       = 3
{0x098C, 0xA410},	// Min_amplitude
{0x0990, 0x000A},	//       = 10

// CCM
{0x098C, 0x2306},	// MCU_ADDRESS [AWB_CCM_L_0]
{0x0990, 0x01D6},	// MCU_DATA_0
{0x098C, 0x2308},	// MCU_ADDRESS [AWB_CCM_L_1]
{0x0990, 0xFF89},	// MCU_DATA_0
{0x098C, 0x230A},	// MCU_ADDRESS [AWB_CCM_L_2]
{0x0990, 0xFFA1},	// MCU_DATA_0
{0x098C, 0x230C},	// MCU_ADDRESS [AWB_CCM_L_3]
{0x0990, 0xFF73},	// MCU_DATA_0
{0x098C, 0x230E},	// MCU_ADDRESS [AWB_CCM_L_4]
{0x0990, 0x019C},	// MCU_DATA_0
{0x098C, 0x2310},	// MCU_ADDRESS [AWB_CCM_L_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2312},	// MCU_ADDRESS [AWB_CCM_L_6]
{0x0990, 0xFFB0},	// MCU_DATA_0
{0x098C, 0x2314},	// MCU_ADDRESS [AWB_CCM_L_7]
{0x0990, 0xFF2D},	// MCU_DATA_0
{0x098C, 0x2316},	// MCU_ADDRESS [AWB_CCM_L_8]
{0x0990, 0x0223},	// MCU_DATA_0
/* Compal Indigo-Carl begin */
{0x098C, 0x2318},	// MCU_ADDRESS [AWB_CCM_L_9]  // red/green gain
//{0x0990, 0x0024},	// MCU_DATA_0
{0x0990, 0x0021},
/* Compal Indigo-Carl end */
{0x098C, 0x231A},	// MCU_ADDRESS [AWB_CCM_L_10]
{0x0990, 0x0038},	// MCU_DATA_0
{0x098C, 0x231C},	// MCU_ADDRESS [AWB_CCM_RL_0]
{0x0990, 0xFFCD},	// MCU_DATA_0
{0x098C, 0x231E},	// MCU_ADDRESS [AWB_CCM_RL_1]
{0x0990, 0x0023},	// MCU_DATA_0
{0x098C, 0x2320},	// MCU_ADDRESS [AWB_CCM_RL_2]
{0x0990, 0x0010},	// MCU_DATA_0
{0x098C, 0x2322},	// MCU_ADDRESS [AWB_CCM_RL_3]
{0x0990, 0x0026},	// MCU_DATA_0
{0x098C, 0x2324},	// MCU_ADDRESS [AWB_CCM_RL_4]
{0x0990, 0xFFE9},	// MCU_DATA_0
{0x098C, 0x2326},	// MCU_ADDRESS [AWB_CCM_RL_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2328},	// MCU_ADDRESS [AWB_CCM_RL_6]
{0x0990, 0x003A},	// MCU_DATA_0
{0x098C, 0x232A},	// MCU_ADDRESS [AWB_CCM_RL_7]
{0x0990, 0x005D},	// MCU_DATA_0
{0x098C, 0x232C},	// MCU_ADDRESS [AWB_CCM_RL_8]
{0x0990, 0xFF69},	// MCU_DATA_0
{0x098C, 0x232E},	// MCU_ADDRESS [AWB_CCM_RL_9]  // delta red/green gain
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0x2330},	// MCU_ADDRESS [AWB_CCM_RL_10]
{0x0990, 0xFFF4},	// MCU_DATA_0

// Lens register settings for A-2031SOC (MT9D115) REV1
{0x364E, 0x0750},	// P_GR_P0Q0
{0x3650, 0x014D},	// P_GR_P0Q1
{0x3652, 0x6D92},	// P_GR_P0Q2
{0x3654, 0xF6CF},	// P_GR_P0Q3
{0x3656, 0xE153},	// P_GR_P0Q4
{0x3658, 0x00D0},	// P_RD_P0Q0
{0x365A, 0x6B0C},	// P_RD_P0Q1
{0x365C, 0x0213},	// P_RD_P0Q2
{0x365E, 0xABED},	// P_RD_P0Q3
{0x3660, 0xF293},	// P_RD_P0Q4
{0x3662, 0x0230},	// P_BL_P0Q0
{0x3664, 0x264C},	// P_BL_P0Q1
{0x3666, 0x37D2},	// P_BL_P0Q2
{0x3668, 0x580B},	// P_BL_P0Q3
{0x366A, 0x88F3},	// P_BL_P0Q4
{0x366C, 0x0190},	// P_GB_P0Q0
{0x366E, 0x31EC},	// P_GB_P0Q1
{0x3670, 0x6D12},	// P_GB_P0Q2
{0x3672, 0xDBAE},	// P_GB_P0Q3
{0x3674, 0xF2F3},	// P_GB_P0Q4
{0x3676, 0x6E06},	// P_GR_P1Q0
{0x3678, 0xE36E},	// P_GR_P1Q1
{0x367A, 0x0EE8},	// P_GR_P1Q2
{0x367C, 0x2B10},	// P_GR_P1Q3
{0x367E, 0x08F2},	// P_GR_P1Q4
{0x3680, 0x4A2C},	// P_RD_P1Q0
{0x3682, 0x8D2E},	// P_RD_P1Q1
{0x3684, 0x7D11},	// P_RD_P1Q2
{0x3686, 0x42F2},	// P_RD_P1Q3
{0x3688, 0xFDD4},	// P_RD_P1Q4
{0x368A, 0xB04D},	// P_BL_P1Q0
{0x368C, 0xCC2C},	// P_BL_P1Q1
{0x368E, 0xE06F},	// P_BL_P1Q2
{0x3690, 0xB38F},	// P_BL_P1Q3
{0x3692, 0x3533},	// P_BL_P1Q4
{0x3694, 0xFFAD},	// P_GB_P1Q0
{0x3696, 0x088F},	// P_GB_P1Q1
{0x3698, 0x8E90},	// P_GB_P1Q2
{0x369A, 0xB9D1},	// P_GB_P1Q3
{0x369C, 0x3673},	// P_GB_P1Q4
{0x369E, 0x2773},	// P_GR_P2Q0
{0x36A0, 0xA351},	// P_GR_P2Q1
{0x36A2, 0xA1B6},	// P_GR_P2Q2
{0x36A4, 0x4BF4},	// P_GR_P2Q3
{0x36A6, 0x6438},	// P_GR_P2Q4
{0x36A8, 0x2D53},	// P_RD_P2Q0
{0x36AA, 0x9DEF},	// P_RD_P2Q1
{0x36AC, 0xA916},	// P_RD_P2Q2
{0x36AE, 0x10B3},	// P_RD_P2Q3
{0x36B0, 0x6818},	// P_RD_P2Q4
{0x36B2, 0x0EF3},	// P_BL_P2Q0
{0x36B4, 0x3BB0},	// P_BL_P2Q1
{0x36B6, 0xFDF5},	// P_BL_P2Q2
{0x36B8, 0xE894},	// P_BL_P2Q3
{0x36BA, 0x57F8},	// P_BL_P2Q4
{0x36BC, 0x2A13},	// P_GB_P2Q0
{0x36BE, 0x5931},	// P_GB_P2Q1
{0x36C0, 0x9D76},	// P_GB_P2Q2
{0x36C2, 0xF333},	// P_GB_P2Q3
{0x36C4, 0x0059},	// P_GB_P2Q4
{0x36C6, 0xCE2E},	// P_GR_P3Q0
{0x36C8, 0x726E},	// P_GR_P3Q1
{0x36CA, 0x7DD3},	// P_GR_P3Q2
{0x36CC, 0x2D6E},	// P_GR_P3Q3
{0x36CE, 0xAA15},	// P_GR_P3Q4
{0x36D0, 0x2370},	// P_RD_P3Q0
{0x36D2, 0x1472},	// P_RD_P3Q1
{0x36D4, 0x8196},	// P_RD_P3Q2
{0x36D6, 0x88D5},	// P_RD_P3Q3
{0x36D8, 0x1079},	// P_RD_P3Q4
{0x36DA, 0x7E0D},	// P_BL_P3Q0
{0x36DC, 0xB24F},	// P_BL_P3Q1
{0x36DE, 0x6A93},	// P_BL_P3Q2
{0x36E0, 0x4875},	// P_BL_P3Q3
{0x36E2, 0x8478},	// P_BL_P3Q4
{0x36E4, 0x2ECF},	// P_GB_P3Q0
{0x36E6, 0xCD72},	// P_GB_P3Q1
{0x36E8, 0x1AB4},	// P_GB_P3Q2
{0x36EA, 0x30F6},	// P_GB_P3Q3
{0x36EC, 0xA696},	// P_GB_P3Q4
{0x36EE, 0x98D5},	// P_GR_P4Q0
{0x36F0, 0x12F5},	// P_GR_P4Q1
{0x36F2, 0x65B8},	// P_GR_P4Q2
{0x36F4, 0xF557},	// P_GR_P4Q3
{0x36F6, 0xC830},	// P_GR_P4Q4
{0x36F8, 0x8835},	// P_RD_P4Q0
{0x36FA, 0x6B4F},	// P_RD_P4Q1
{0x36FC, 0x5398},	// P_RD_P4Q2
{0x36FE, 0x3716},	// P_RD_P4Q3
{0x3700, 0xD679},	// P_RD_P4Q4
{0x3702, 0x8195},	// P_BL_P4Q0
{0x3704, 0xA553},	// P_BL_P4Q1
{0x3706, 0x60B8},	// P_BL_P4Q2
{0x3708, 0x39B8},	// P_BL_P4Q3
{0x370A, 0xB25A},	// P_BL_P4Q4
{0x370C, 0x9DB5},	// P_GB_P4Q0
{0x370E, 0xD275},	// P_GB_P4Q1
{0x3710, 0x3298},	// P_GB_P4Q2
{0x3712, 0x2A78},	// P_GB_P4Q3
{0x3714, 0xA6F9},	// P_GB_P4Q4
{0x3644, 0x0320},	// POLY_ORIGIN_C
{0x3642, 0x0264},	// POLY_ORIGIN_R
{0x3210, 0x01B8},

// [GAMMA PC]
{0x098C, 0xAB37},	// MCU_ADDRESS [HG_GAMMA_MORPH_CTRL]
{0x0990, 0x0003},	// MCU_DATA_0
{0x098C, 0x2B38},	// MCU_ADDRESS [HG_GAMMASTARTMORPH]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0x2B3A},	// MCU_ADDRESS [HG_GAMMASTOPMORPH]
{0x0990, 0x2D50},	// MCU_DATA_0
{0x098C, 0x2B62},	// MCU_ADDRESS [HG_FTB_START_BM]
{0x0990, 0xFFFE},	// MCU_DATA_0
{0x098C, 0x2B64},	// MCU_ADDRESS [HG_FTB_STOP_BM]
{0x0990, 0xFFFF},	// MCU_DATA_0

/* Compal Indigo-Carl 2011.09.15 tune ++ */
/* Gamma settings */
/*
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0
*/
//contrast=2
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0
/* Compal Indigo-Carl 2011.09.15 tune -- */

// AE settings
{0x098C, 0xA117},	// MCU_ADDRESS [SEQ_PREVIEW_0_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA11D},	// MCU_ADDRESS [SEQ_PREVIEW_1_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA129},	// MCU_ADDRESS [SEQ_PREVIEW_3_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA216},	// MCU_ADDRESS [AE_MAXGAIN23]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20E},	// MCU_ADDRESS [AE_MAX_VIRTGAIN]
{0x0990, 0x0070},	// MCU_DATA_0  //0x0080  //Carl 0914 tune
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x00A4},	// MCU_DATA_0

// SOC2031 patch
{0x098C, 0x0415},
{0x0990, 0xF601},
{0x0992, 0x42C1},
{0x0994, 0x0326},
{0x0996, 0x11F6},
{0x0998, 0x0143},
{0x099A, 0xC104},
{0x099C, 0x260A},
{0x099E, 0xCC04},

{0x098C, 0x0425},
{0x0990, 0x33BD},
{0x0992, 0xA362},
{0x0994, 0xBD04},
{0x0996, 0x3339},
{0x0998, 0xC6FF},
{0x099A, 0xF701},
{0x099C, 0x6439},
{0x099E, 0xFE01},

{0x098C, 0x0435},
{0x0990, 0x6918},
{0x0992, 0xCE03},
{0x0994, 0x25CC},
{0x0996, 0x0013},
{0x0998, 0xBDC2},
{0x099A, 0xB8CC},
{0x099C, 0x0489},
{0x099E, 0xFD03},

{0x098C, 0x0445},
{0x0990, 0x27CC},
{0x0992, 0x0325},
{0x0994, 0xFD01},
{0x0996, 0x69FE},
{0x0998, 0x02BD},
{0x099A, 0x18CE},
{0x099C, 0x0339},
{0x099E, 0xCC00},

{0x098C, 0x0455},
{0x0990, 0x11BD},
{0x0992, 0xC2B8},
{0x0994, 0xCC04},
{0x0996, 0xC8FD},
{0x0998, 0x0347},
{0x099A, 0xCC03},
{0x099C, 0x39FD},
{0x099E, 0x02BD},

{0x098C, 0x0465},
{0x0990, 0xDE00},
{0x0992, 0x18CE},
{0x0994, 0x00C2},
{0x0996, 0xCC00},
{0x0998, 0x37BD},
{0x099A, 0xC2B8},
{0x099C, 0xCC04},
{0x099E, 0xEFDD},

{0x098C, 0x0475},
{0x0990, 0xE6CC},
{0x0992, 0x00C2},
{0x0994, 0xDD00},
{0x0996, 0xC601},
{0x0998, 0xF701},
{0x099A, 0x64C6},
{0x099C, 0x03F7},
{0x099E, 0x0165},

{0x098C, 0x0485},
{0x0990, 0x7F01},
{0x0992, 0x6639},
{0x0994, 0x3C3C},
{0x0996, 0x3C34},
{0x0998, 0xCC32},
{0x099A, 0x3EBD},
{0x099C, 0xA558},
{0x099E, 0x30ED},

{0x098C, 0x0495},
{0x0990, 0x04BD},
{0x0992, 0xB2D7},
{0x0994, 0x30E7},
{0x0996, 0x06CC},
{0x0998, 0x323E},
{0x099A, 0xED00},
{0x099C, 0xEC04},
{0x099E, 0xBDA5},

{0x098C, 0x04A5},
{0x0990, 0x44CC},
{0x0992, 0x3244},
{0x0994, 0xBDA5},
{0x0996, 0x585F},
{0x0998, 0x30ED},
{0x099A, 0x02CC},
{0x099C, 0x3244},
{0x099E, 0xED00},

{0x098C, 0x04B5},
{0x0990, 0xF601},
{0x0992, 0xD54F},
{0x0994, 0xEA03},
{0x0996, 0xAA02},
{0x0998, 0xBDA5},
{0x099A, 0x4430},
{0x099C, 0xE606},
{0x099E, 0x3838},

{0x098C, 0x04C5},
{0x0990, 0x3831},
{0x0992, 0x39BD},
{0x0994, 0xD661},
{0x0996, 0xF602},
{0x0998, 0xF4C1},
{0x099A, 0x0126},
{0x099C, 0x0BFE},
{0x099E, 0x02BD},

{0x098C, 0x04D5},
{0x0990, 0xEE10},
{0x0992, 0xFC02},
{0x0994, 0xF5AD},
{0x0996, 0x0039},
{0x0998, 0xF602},
{0x099A, 0xF4C1},
{0x099C, 0x0226},
{0x099E, 0x0AFE},

{0x098C, 0x04E5},
{0x0990, 0x02BD},
{0x0992, 0xEE10},
{0x0994, 0xFC02},
{0x0996, 0xF7AD},
{0x0998, 0x0039},
{0x099A, 0x3CBD},
{0x099C, 0xB059},
{0x099E, 0xCC00},

{0x098C, 0x04F5},
{0x0990, 0x28BD},
{0x0992, 0xA558},
{0x0994, 0x8300},
{0x0996, 0x0027},
{0x0998, 0x0BCC},
{0x099A, 0x0026},
{0x099C, 0x30ED},
{0x099E, 0x00C6},

{0x098C, 0x0505},
{0x0990, 0x03BD},
{0x0992, 0xA544},
{0x0994, 0x3839},

{0x098C, 0x2006},	// MCU_ADDRESS [MON_ARG1]
{0x0990, 0x0415},	// MCU_DATA_0
{0x098C, 0xA005},	// MCU_ADDRESS [MON_CMD]
{0x0990, 0x0001},	// MCU_DATA_0
{SENSOR_WAIT_MS, 50},	// POLL MON_PATCH_ID_0 => 0x01

// Errata for Silicon Rev
{0x098C, 0xAB36},	// MCU_ADDRESS [HG_CLUSTERDC_TH]
{0x0990, 0x0014},	// MCU_DATA_0
{0x098C, 0x2B66},	// MCU_ADDRESS [HG_CLUSTER_DC_BM]
{0x0990, 0x2AF8},	// MCU_DATA_0
{0x098C, 0xAB20},	// MCU_ADDRESS [HG_LL_SAT1]
{0x0990, 0x0040},	// MCU_DATA_0  //normal light SAT  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB24},	// MCU_ADDRESS [HG_LL_SAT2]
{0x0990, 0x0000},	// MCU_DATA_0  //low light SAT
{0x098C, 0xAB21},	// MCU_ADDRESS [HG_LL_INTERPTHRESH1]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB25},	// MCU_ADDRESS [HG_LL_INTERPTHRESH2]
{0x0990, 0x002A},	// MCU_DATA_0
{0x098C, 0xAB22},	// MCU_ADDRESS [HG_LL_APCORR1]
{0x0990, 0x0006},	// MCU_DATA_0  //normal light sharpness:0~7  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB26},	// MCU_ADDRESS [HG_LL_APCORR2]
{0x0990, 0x0002},	// MCU_DATA_0  //low light sharpness:0~7  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB23},	// MCU_ADDRESS [HG_LL_APTHRESH1]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xAB27},	// MCU_ADDRESS [HG_LL_APTHRESH2]
{0x0990, 0x0009},	// MCU_DATA_0
{0x098C, 0x2B28},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTART]
{0x0990, 0x0BB8},	// MCU_DATA_0
{0x098C, 0x2B2A},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTOP]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0xAB2C},	// MCU_ADDRESS [HG_NR_START_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2D},	// MCU_ADDRESS [HG_NR_START_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2E},	// MCU_ADDRESS [HG_NR_START_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2F},	// MCU_ADDRESS [HG_NR_START_OL]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0006},	// MCU_DATA_0
{0x098C, 0xAB34},	// MCU_ADDRESS [HG_NR_GAINSTART]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xAB35},	// MCU_ADDRESS [HG_NR_GAINSTOP]
{0x0990, 0x0091},	// MCU_DATA_0
{0x098C, 0xA765},	// MCU_ADDRESS [MODE_COMMONMODESETTINGS_FILTER_MODE]
{0x0990, 0x0006},	// MCU_DATA_0

/* Compal Indigo-Carl 2011.09.15 tune
{0x098C, 0xAB37},	// MCU_ADDRESS [HG_GAMMA_MORPH_CTRL]
{0x0990, 0x0003},	// MCU_DATA_0  //USE gamma A only: 0x0002
{0x098C, 0x2B38},	// MCU_ADDRESS [HG_GAMMASTARTMORPH]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0x2B3A},	// MCU_ADDRESS [HG_GAMMASTOPMORPH]
{0x0990, 0x2D50},	// MCU_DATA_0
{0x098C, 0x2B62},	// MCU_ADDRESS [HG_FTB_START_BM]
{0x0990, 0xFFFE},	// MCU_DATA_0
{0x098C, 0x2B64},	// MCU_ADDRESS [HG_FTB_STOP_BM]
{0x0990, 0xFFFF},	// MCU_DATA_0
*/

// LOAD=GAMMA PC
/* Compal Indigo-Carl 2011.09.14 tune ++ */
/* Gamma settings */
/*
{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0
*/
/* Compal Indigo-Carl 2011.09.14 tune -- */

{SENSOR_WAIT_MS, 100},	//delay = 50 // POLL MON_PATCH_ID_0 => 0x01

{0x098C, 0xA36D},	// MCU_ADDRESS [AWB_EDGETH_MIN]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xA24B},	// MCU_ADDRESS [AE_TARGETMAX]
{0x0990, 0x0096},	// MCU_DATA_0
{0x098C, 0xA24A},	// MCU_ADDRESS [AE_TARGETMIN]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xA24F},	// MCU_ADDRESS [AE_BASETARGET]
{0x0990, 0x0038},	//Carl 0914 tune  //0x0032  //0915
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0030},	// MCU_DATA_0
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20C},	// MCU_ADDRESS [AE_MAX_INDEX]
{0x0990, 0x0010},	// 60hZ
{0x098C, 0xA215},	// MCU_ADDRESS [AE_INDEX_TH23]
{0x0990, 0x0004},	// MCU_DATA_0

// to overcome AE over expose when LV16 and LV17   2011. 01. 04
{0x098C, 0xA768},	// MCU_ADDRESS [MODE_MIN_IT_TIME_LIMIT]
{0x0990, 0x0000},	// MCU_DATA_0

// to reduce green at CWF 2011. 01. 04
{0x098C, 0xA363},	// MCU_ADDRESS [AWB_TG_MIN0]
{0x0990, 0x00C9},	// MCU_DATA_0

{0x098C, 0xA369},	// MCU_ADDRESS [AWB_KR_R]
{0x0990, 0x0080},	// MCU_DATA_0 // to increase red at day light 2011.01.25

{SENSOR_WAIT_MS, 50},	// delay=50
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},	// delay=100
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},	// delay=100

{0x3400, 0x7A20},	// set to discontinous clock

{SENSOR_TABLE_END, 0x0000}
}; // End of CTS_ZoomTest_mode_1600x1200[]

static struct sensor_reg mode_1280x720[] = {
// Reset the sensor
{0x001A, 0x0001},
{SENSOR_WAIT_MS, 10},
{0x001A, 0x0000},
{SENSOR_WAIT_MS, 50},	// delay=50

// select output interface
{0x001A, 0x0050},	// BITFIELD=0x001A, 0x0200, 0 // disable Parallel
{0x001A, 0x0058},	// BITFIELD=0x001A, 0x0008, 1 // MIPI

// program the on-chip PLL
{0x0014, 0x21F9},	// PLL Control: BYPASS PLL = 8697
{0x0010, 0x0115},	// PLL Dividers = 277
{0x0012, 0x00F5},	// wcd = 8
{0x0014, 0x2545},	// PLL Control: TEST_BYPASS on = 9541
{0x0014, 0x2547},	// PLL Control: PLL_ENABLE on = 9543
{0x0014, 0x2447},	// PLL Control: SEL_LOCK_DET on
{SENSOR_WAIT_MS, 1},	// Delay 1ms // to allow PLL to loc
{0x0014, 0x2047},	// PLL Control: PLL_BYPASS off
{0x0014, 0x2046},	// PLL Control: TEST_BYPASS off

// enable powerup stop
{0x0018, 0x402D},	// LOAD=MCU Powerup Stop Enable
{SENSOR_WAIT_MS, 10},	// delay=10

// start MCU, includes wait for standby_done to clear
{0x0018, 0x402C},	// LOAD=GO
{SENSOR_WAIT_MS, 10},	// delay=10

// sensor core & flicker timings
{0x098C, 0x2703},	// Output Width (A)
{0x0990, 0x0500},	//       = 1280
{0x098C, 0x2705},	// Output Height (A)
{0x0990, 0x02D0},	//       = 720
{0x098C, 0x2707},	// Output Width (B)
{0x0990, 0x0640},	//       = 1600
{0x098C, 0x2709},	// Output Height (B)
{0x0990, 0x04B0},	//       = 1200
{0x098C, 0x270D},	// Row Start (A)
{0x0990, 0x00F6},	//       = 246
{0x098C, 0x270F},	// Column Start (A)
{0x0990, 0x00A6},	//       = 166
{0x098C, 0x2711},	// Row End (A)
{0x0990, 0x03CD},	//       = 973
{0x098C, 0x2713},	// Column End (A)
{0x0990, 0x05AD},	//       = 1453
{0x098C, 0x2715},	// Row Speed (A)
{0x0990, 0x0111},	//       = 273
{0x098C, 0x2717},	// Read Mode (A)
{0x0990, 0x0024},	//       = 36
{0x098C, 0x2719},	// sensor_fine_correction (A)
{0x0990, 0x003A},	//       = 58
{0x098C, 0x271B},	// sensor_fine_IT_min (A)
{0x0990, 0x00F6},	//       = 246
{0x098C, 0x271D},	// sensor_fine_IT_max_margin (A)
{0x0990, 0x008B},	//       = 139
{0x098C, 0x271F},	// Frame Lines (A)
{0x0990, 0x032D},	//       = 813
{0x098C, 0x2721},	// Line Length (A)
{0x0990, 0x06F4},	//       = 1780
{0x098C, 0x2723},	// Row Start (B)
{0x0990, 0x0004},	//       = 4
{0x098C, 0x2725},	// Column Start (B)
{0x0990, 0x0004},	//       = 4
{0x098C, 0x2727},	// Row End (B)
{0x0990, 0x04BB},	//       = 1211
{0x098C, 0x2729},	// Column End (B)
{0x0990, 0x064B},	//       = 1611
{0x098C, 0x272B},	// Row Speed (B)
{0x0990, 0x0111},	//       = 273
{0x098C, 0x272D},	// Read Mode (B)
{0x0990, 0x0024},	//       = 36
{0x098C, 0x272F},	// sensor_fine_correction (B)
{0x0990, 0x003A},	//       = 58
{0x098C, 0x2731},	// sensor_fine_IT_min (B)
{0x0990, 0x00F6},	//       = 246
{0x098C, 0x2733},	// sensor_fine_IT_max_margin (B)
{0x0990, 0x008B},	//       = 139
{0x098C, 0x2735},	// Frame Lines (B)
{0x0990, 0x0521},	//       = 1313
{0x098C, 0x2737},	// Line Length (B)
{0x0990, 0x08EC},	//       = 2284
{0x098C, 0x2739},	// Crop_X0 (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x273B},	// Crop_X1 (A)
{0x0990, 0x04FF},	//       = 1279
{0x098C, 0x273D},	// Crop_Y0 (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x273F},	// Crop_Y1 (A)
{0x0990, 0x02CF},	//       = 719
{0x098C, 0x2747},	// Crop_X0 (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2749},	// Crop_X1 (B)
{0x0990, 0x063F},	//       = 1599
{0x098C, 0x274B},	// Crop_Y0 (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x274D},	// Crop_Y1 (B)
{0x0990, 0x04AF},	//       = 1199

{0x098C, 0x222D},	// R9 Step
{0x0990, 0x00C5},	//       = 197
{0x098C, 0xA408},	// search_f1_50
{0x0990, 0x0030},	//       = 48
{0x098C, 0xA409},	// search_f2_50
{0x0990, 0x0032},	//       = 50
{0x098C, 0xA40A},	// search_f1_60
{0x0990, 0x003A},	//       = 58
{0x098C, 0xA40B},	// search_f2_60
{0x0990, 0x003C},	//       = 60
{0x098C, 0x2411},	// R9_Step_60 (A)
{0x0990, 0x00C5},	//       = 197
{0x098C, 0x2413},	// R9_Step_50 (A)
{0x0990, 0x00EC},	//       = 236
{0x098C, 0x2415},	// R9_Step_60 (B)
{0x0990, 0x0099},	//       = 153
{0x098C, 0x2417},	// R9_Step_50 (B)
{0x0990, 0x00B8},	//       = 184
{0x098C, 0xA404},	// FD Mode
{0x0990, 0x0010},	//       = 16
{0x098C, 0xA40D},	// Stat_min
{0x0990, 0x0002},	//       = 2
{0x098C, 0xA40E},	// Stat_max
{0x0990, 0x0003},	//       = 3
{0x098C, 0xA410},	// Min_amplitude
{0x0990, 0x000A},	//       = 10

// AE settings
{0x098C, 0xA117},	// MCU_ADDRESS [SEQ_PREVIEW_0_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA11D},	// MCU_ADDRESS [SEQ_PREVIEW_1_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA129},	// MCU_ADDRESS [SEQ_PREVIEW_3_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA216},	// MCU_ADDRESS  [AE_MAXGAIN23]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20E},	// MCU_ADDRESS [AE_MAX_VIRTGAIN]
{0x0990, 0x0070},	// MCU_DATA_0  //0x0080  //Carl 0914 tune
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x00A4},	// MCU_DATA_0

// Lens register settings for A-2031SOC (MT9D115) REV1
{0x364E, 0x0750},	// P_GR_P0Q0
{0x3650, 0x014D},	// P_GR_P0Q1
{0x3652, 0x6D92},	// P_GR_P0Q2
{0x3654, 0xF6CF},	// P_GR_P0Q3
{0x3656, 0xE153},	// P_GR_P0Q4
{0x3658, 0x00D0},	// P_RD_P0Q0
{0x365A, 0x6B0C},	// P_RD_P0Q1
{0x365C, 0x0213},	// P_RD_P0Q2
{0x365E, 0xABED},	// P_RD_P0Q3
{0x3660, 0xF293},	// P_RD_P0Q4
{0x3662, 0x0230},	// P_BL_P0Q0
{0x3664, 0x264C},	// P_BL_P0Q1
{0x3666, 0x37D2},	// P_BL_P0Q2
{0x3668, 0x580B},	// P_BL_P0Q3
{0x366A, 0x88F3},	// P_BL_P0Q4
{0x366C, 0x0190},	// P_GB_P0Q0
{0x366E, 0x31EC},	// P_GB_P0Q1
{0x3670, 0x6D12},	// P_GB_P0Q2
{0x3672, 0xDBAE},	// P_GB_P0Q3
{0x3674, 0xF2F3},	// P_GB_P0Q4
{0x3676, 0x6E06},	// P_GR_P1Q0
{0x3678, 0xE36E},	// P_GR_P1Q1
{0x367A, 0x0EE8},	// P_GR_P1Q2
{0x367C, 0x2B10},	// P_GR_P1Q3
{0x367E, 0x08F2},	// P_GR_P1Q4
{0x3680, 0x4A2C},	// P_RD_P1Q0
{0x3682, 0x8D2E},	// P_RD_P1Q1
{0x3684, 0x7D11},	// P_RD_P1Q2
{0x3686, 0x42F2},	// P_RD_P1Q3
{0x3688, 0xFDD4},	// P_RD_P1Q4
{0x368A, 0xB04D},	// P_BL_P1Q0
{0x368C, 0xCC2C},	// P_BL_P1Q1
{0x368E, 0xE06F},	// P_BL_P1Q2
{0x3690, 0xB38F},	// P_BL_P1Q3
{0x3692, 0x3533},	// P_BL_P1Q4
{0x3694, 0xFFAD},	// P_GB_P1Q0
{0x3696, 0x088F},	// P_GB_P1Q1
{0x3698, 0x8E90},	// P_GB_P1Q2
{0x369A, 0xB9D1},	// P_GB_P1Q3
{0x369C, 0x3673},	// P_GB_P1Q4
{0x369E, 0x2773},	// P_GR_P2Q0
{0x36A0, 0xA351},	// P_GR_P2Q1
{0x36A2, 0xA1B6},	// P_GR_P2Q2
{0x36A4, 0x4BF4},	// P_GR_P2Q3
{0x36A6, 0x6438},	// P_GR_P2Q4
{0x36A8, 0x2D53},	// P_RD_P2Q0
{0x36AA, 0x9DEF},	// P_RD_P2Q1
{0x36AC, 0xA916},	// P_RD_P2Q2
{0x36AE, 0x10B3},	// P_RD_P2Q3
{0x36B0, 0x6818},	// P_RD_P2Q4
{0x36B2, 0x0EF3},	// P_BL_P2Q0
{0x36B4, 0x3BB0},	// P_BL_P2Q1
{0x36B6, 0xFDF5},	// P_BL_P2Q2
{0x36B8, 0xE894},	// P_BL_P2Q3
{0x36BA, 0x57F8},	// P_BL_P2Q4
{0x36BC, 0x2A13},	// P_GB_P2Q0
{0x36BE, 0x5931},	// P_GB_P2Q1
{0x36C0, 0x9D76},	// P_GB_P2Q2
{0x36C2, 0xF333},	// P_GB_P2Q3
{0x36C4, 0x0059},	// P_GB_P2Q4
{0x36C6, 0xCE2E},	// P_GR_P3Q0
{0x36C8, 0x726E},	// P_GR_P3Q1
{0x36CA, 0x7DD3},	// P_GR_P3Q2
{0x36CC, 0x2D6E},	// P_GR_P3Q3
{0x36CE, 0xAA15},	// P_GR_P3Q4
{0x36D0, 0x2370},	// P_RD_P3Q0
{0x36D2, 0x1472},	// P_RD_P3Q1
{0x36D4, 0x8196},	// P_RD_P3Q2
{0x36D6, 0x88D5},	// P_RD_P3Q3
{0x36D8, 0x1079},	// P_RD_P3Q4
{0x36DA, 0x7E0D},	// P_BL_P3Q0
{0x36DC, 0xB24F},	// P_BL_P3Q1
{0x36DE, 0x6A93},	// P_BL_P3Q2
{0x36E0, 0x4875},	// P_BL_P3Q3
{0x36E2, 0x8478},	// P_BL_P3Q4
{0x36E4, 0x2ECF},	// P_GB_P3Q0
{0x36E6, 0xCD72},	// P_GB_P3Q1
{0x36E8, 0x1AB4},	// P_GB_P3Q2
{0x36EA, 0x30F6},	// P_GB_P3Q3
{0x36EC, 0xA696},	// P_GB_P3Q4
{0x36EE, 0x98D5},	// P_GR_P4Q0
{0x36F0, 0x12F5},	// P_GR_P4Q1
{0x36F2, 0x65B8},	// P_GR_P4Q2
{0x36F4, 0xF557},	// P_GR_P4Q3
{0x36F6, 0xC830},	// P_GR_P4Q4
{0x36F8, 0x8835},	// P_RD_P4Q0
{0x36FA, 0x6B4F},	// P_RD_P4Q1
{0x36FC, 0x5398},	// P_RD_P4Q2
{0x36FE, 0x3716},	// P_RD_P4Q3
{0x3700, 0xD679},	// P_RD_P4Q4
{0x3702, 0x8195},	// P_BL_P4Q0
{0x3704, 0xA553},	// P_BL_P4Q1
{0x3706, 0x60B8},	// P_BL_P4Q2
{0x3708, 0x39B8},	// P_BL_P4Q3
{0x370A, 0xB25A},	// P_BL_P4Q4
{0x370C, 0x9DB5},	// P_GB_P4Q0
{0x370E, 0xD275},	// P_GB_P4Q1
{0x3710, 0x3298},	// P_GB_P4Q2
{0x3712, 0x2A78},	// P_GB_P4Q3
{0x3714, 0xA6F9},	// P_GB_P4Q4
{0x3644, 0x0320},	// POLY_ORIGIN_C
{0x3642, 0x0264},	// POLY_ORIGIN_R
{0x3210, 0x01B8},

// Kernel setting
{0x098C, 0xAB36},	// MCU_ADDRESS [HG_CLUSTERDC_TH]
{0x0990, 0x0014},	// MCU_DATA_0
{0x098C, 0x2B66},	// MCU_ADDRESS [HG_CLUSTER_DC_BM]
{0x0990, 0x2AF8},	// MCU_DATA_0
{0x098C, 0xAB20},	// MCU_ADDRESS [HG_LL_SAT1]
{0x0990, 0x0040},	// MCU_DATA_0  //normal light SAT  //Carl 0914 tune
{0x098C, 0xAB24},	// MCU_ADDRESS [HG_LL_SAT2]
{0x0990, 0x0000},	// MCU_DATA_0  //low light SAT
{0x098C, 0xAB21},	// MCU_ADDRESS [HG_LL_INTERPTHRESH1]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB25},	// MCU_ADDRESS [HG_LL_INTERPTHRESH2]
{0x0990, 0x002A},	// MCU_DATA_0
{0x098C, 0xAB22},	// MCU_ADDRESS [HG_LL_APCORR1]
{0x0990, 0x0006},	// MCU_DATA_0  //normal light sharpness:0~7  //Carl 0914 tune //0915
{0x098C, 0xAB26},	// MCU_ADDRESS [HG_LL_APCORR2]
{0x0990, 0x0002},	// MCU_DATA_0  //low light sharpness:0~7  //Carl 0914 tune
{0x098C, 0xAB23},	// MCU_ADDRESS [HG_LL_APTHRESH1]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xAB27},	// MCU_ADDRESS [HG_LL_APTHRESH2]
{0x0990, 0x0009},	// MCU_DATA_0
{0x098C, 0x2B28},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTART]
{0x0990, 0x0BB8},	// MCU_DATA_0
{0x098C, 0x2B2A},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTOP]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0xAB2C},	// MCU_ADDRESS [HG_NR_START_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2D},	// MCU_ADDRESS [HG_NR_START_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2E},	// MCU_ADDRESS [HG_NR_START_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2F},	// MCU_ADDRESS [HG_NR_START_OL]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0006},	// MCU_DATA_0
{0x098C, 0xAB34},	// MCU_ADDRESS [HG_NR_GAINSTART]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xAB35},	// MCU_ADDRESS [HG_NR_GAINSTOP]
{0x0990, 0x0091},	// MCU_DATA_0
{0x098C, 0xA765},	// MCU_ADDRESS [MODE_COMMONMODESETTINGS_FILTER_MODE]
{0x0990, 0x0006},	// MCU_DATA_0

// [GAMMA PC]
{0x098C, 0xAB37},	// MCU_ADDRESS [HG_GAMMA_MORPH_CTRL]
{0x0990, 0x0003},	// MCU_DATA_0
{0x098C, 0x2B38},	// MCU_ADDRESS [HG_GAMMASTARTMORPH]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0x2B3A},	// MCU_ADDRESS [HG_GAMMASTOPMORPH]
{0x0990, 0x2D50},	// MCU_DATA_0
{0x098C, 0x2B62},	// MCU_ADDRESS [HG_FTB_START_BM]
{0x0990, 0xFFFE},	// MCU_DATA_0
{0x098C, 0x2B64},	// MCU_ADDRESS [HG_FTB_STOP_BM]
{0x0990, 0xFFFF},	// MCU_DATA_0

/* Compal Indigo-Carl 2011.09.14 tune ++ */
/* Gamma settings */
/*
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0
*/
//contrast=2
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0
/* Compal Indigo-Carl 2011.09.14 tune -- */

// CCM
{0x098C, 0x2306},	// MCU_ADDRESS [AWB_CCM_L_0]
{0x0990, 0x01D6},	// MCU_DATA_0
{0x098C, 0x2308},	// MCU_ADDRESS [AWB_CCM_L_1]
{0x0990, 0xFF89},	// MCU_DATA_0
{0x098C, 0x230A},	// MCU_ADDRESS [AWB_CCM_L_2]
{0x0990, 0xFFA1},	// MCU_DATA_0
{0x098C, 0x230C},	// MCU_ADDRESS [AWB_CCM_L_3]
{0x0990, 0xFF73},	// MCU_DATA_0
{0x098C, 0x230E},	// MCU_ADDRESS [AWB_CCM_L_4]
{0x0990, 0x019C},	// MCU_DATA_0
{0x098C, 0x2310},	// MCU_ADDRESS [AWB_CCM_L_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2312},	// MCU_ADDRESS [AWB_CCM_L_6]
{0x0990, 0xFFB0},	// MCU_DATA_0
{0x098C, 0x2314},	// MCU_ADDRESS [AWB_CCM_L_7]
{0x0990, 0xFF2D},	// MCU_DATA_0
{0x098C, 0x2316},	// MCU_ADDRESS [AWB_CCM_L_8]
{0x0990, 0x0223},	// MCU_DATA_0
/* Compal Indigo-Carl begin */
{0x098C, 0x2318},       // MCU_ADDRESS [AWB_CCM_L_9]  // red/green gain
//{0x0990, 0x0024},     // MCU_DATA_0
{0x0990, 0x0021},
/* Compal Indigo-Carl end */
{0x098C, 0x231A},	// MCU_ADDRESS [AWB_CCM_L_10]
{0x0990, 0x0038},	// MCU_DATA_0
{0x098C, 0x231C},	// MCU_ADDRESS [AWB_CCM_RL_0]
{0x0990, 0xFFCD},	// MCU_DATA_0
{0x098C, 0x231E},	// MCU_ADDRESS [AWB_CCM_RL_1]
{0x0990, 0x0023},	// MCU_DATA_0
{0x098C, 0x2320},	// MCU_ADDRESS [AWB_CCM_RL_2]
{0x0990, 0x0010},	// MCU_DATA_0
{0x098C, 0x2322},	// MCU_ADDRESS [AWB_CCM_RL_3]
{0x0990, 0x0026},	// MCU_DATA_0
{0x098C, 0x2324},	// MCU_ADDRESS [AWB_CCM_RL_4]
{0x0990, 0xFFE9},	// MCU_DATA_0
{0x098C, 0x2326},	// MCU_ADDRESS [AWB_CCM_RL_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2328},	// MCU_ADDRESS [AWB_CCM_RL_6]
{0x0990, 0x003A},	// MCU_DATA_0
{0x098C, 0x232A},	// MCU_ADDRESS [AWB_CCM_RL_7]
{0x0990, 0x005D},	// MCU_DATA_0
{0x098C, 0x232C},	// MCU_ADDRESS [AWB_CCM_RL_8]
{0x0990, 0xFF69},	// MCU_DATA_0
{0x098C, 0x232E},	// MCU_ADDRESS [AWB_CCM_RL_9]  // delta red/green gain
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0x2330},	// MCU_ADDRESS [AWB_CCM_RL_10]
{0x0990, 0xFFF4},	// MCU_DATA_0

// continue after powerup stop
// LOAD=Continue
// clear powerup stop bit
// BITFIELD=0x0018, 0x0004, 0
{0x0018, 0x0028},	// wait for sequencer to enter preview state

//POLL_FIELD=SEQ_STATE,!=3,DELAY=10,TIMEOUT=100
{SENSOR_WAIT_MS, 100},

// to fix AWB not triggle when scenes have no edge
{0x098C, 0xA36D},	// MCU_ADDRESS [AWB_EDGETH_MIN]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xA24B},	// MCU_ADDRESS [AE_TARGETMAX]
{0x0990, 0x0096},	// MCU_DATA_0
{0x098C, 0xA24A},	// MCU_ADDRESS [AE_TARGETMIN]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xA24F},       // MCU_ADDRESS [AE_BASETARGET]
{0x0990, 0x0038},	//Carl 0914 tune  //0x0032  //0915

// NR reduction for context B
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0030},	// MCU_DATA_0
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x0080},	// MCU_DATA_0

//30~7.5 variable FPS
{0x098C, 0xA20C},	// MCU_ADDRESS [AE_MAX_INDEX]
{0x0990, 0x0010},	// 60hZ
{0x098C, 0xA215},	// MCU_ADDRESS [AE_INDEX_TH23]
{0x0990, 0x0004},	// MCU_DATA_0

// to overcome AE over expose when LV16 and LV17   2011. 01. 04
{0x098C, 0xA768},	// MCU_ADDRESS [MODE_MIN_IT_TIME_LIMIT]
{0x0990, 0x0000},	// MCU_DATA_0

// to reduce green at CWF 2011. 01. 04
{0x098C, 0xA363},	// MCU_ADDRESS [AWB_TG_MIN0]
{0x0990, 0x00C9},	// MCU_DATA_0

{0x098C, 0xA369},	// MCU_ADDRESS [AWB_KR_R]
{0x0990, 0x0080},	// MCU_DATA_0 }, // to increase red at day light 2011.01.25

// syncronize the FW with the sensor
{0x098C, 0xA103},	// Refresh Sequencer Mode
{0x0990, 0x0006},	//       = 6
{SENSOR_WAIT_MS, 50},

{SENSOR_WAIT_MS, 50},	// delay=50
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD] Refresh Sequencer Mode
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},	// delay=100
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD] Refresh Sequencer
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},	// delay=100

{0x001e, 0x0505},
{0x3400, 0x7A20},	// set to discontinous clock
{SENSOR_TABLE_END, 0x0000}
}; // End of mode_1280x720[]

// ===============================================================================================

/* Compal Indigo-Carl for CTS 2011.07.11 begin */
//#if 0  // for CTS 2012.04.21
static struct sensor_reg mode_1280x960[] = {
// Reset the sensor
{0x001A, 0x0001},
{SENSOR_WAIT_MS, 10},
{0x001A, 0x0000},
{SENSOR_WAIT_MS, 50},

// select output interface
{0x001A, 0x0050},	// BITFIELD=0x001A, 0x0200, 0 // disable Parallel
{0x001A, 0x0058},	// BITFIELD=0x001A, 0x0008, 1 // MIPI

// program the on-chip PLL
{0x0014, 0x21F9},	// PLL Control: BYPASS PLL = 8697
{0x0010, 0x0115},	// PLL Dividers = 277
{0x0012, 0x00F5},	// wcd = 8
{0x0014, 0x2545},	// PLL Control: TEST_BYPASS on = 9541
{0x0014, 0x2547},	// PLL Control: PLL_ENABLE on = 9543
{0x0014, 0x2447},	// PLL Control: SEL_LOCK_DET on
{SENSOR_WAIT_MS, 1},	// Delay 1ms // to allow PLL to loc
{0x0014, 0x2047},	// PLL Control: PLL_BYPASS off
{0x0014, 0x2046},	// PLL Control: TEST_BYPASS off

// enable powerup stop
{0x0018, 0x402D},	// LOAD=MCU Powerup Stop Enable
{SENSOR_WAIT_MS, 10},	// delay=10

// start MCU, includes wait for standby_done to clear
{0x0018, 0x402C},	// LOAD=GO
{SENSOR_WAIT_MS, 10},	// delay=10

// sensor code & flicker timings
{0x98C, 0x2703},	//Output Width (A)
{0x990, 0x0500},	//      = 1280
{0x98C, 0x2705},	//Output Height (A)
{0x990, 0x03C0},	//      = 960
{0x98C, 0x2707},	//Output Width (B)
{0x990, 0x0640},	//      = 1600
{0x98C, 0x2709},	//Output Height (B)
{0x990, 0x04B0},	//      = 1200
{0x98C, 0x270D},	//Row Start (A)
{0x990, 0x0004},	//      = 4
{0x98C, 0x270F},	//Column Start (A)
{0x990, 0x0004},	//      = 4
{0x98C, 0x2711},	//Row End (A)
{0x990, 0x03CB},	//      = 971
{0x98C, 0x2713},	//Column End (A)
{0x990, 0x050B},	//      = 1291
{0x98C, 0x2715},	//Row Speed (A)
{0x990, 0x0111},	//      = 273
{0x98C, 0x2717},	//Read Mode (A)
{0x990, 0x0024},	//      = 36
{0x98C, 0x2719},	//sensor_fine_correction (A)
{0x990, 0x003A},	//      = 58
{0x98C, 0x271B},	//sensor_fine_IT_min (A)
{0x990, 0x00F6},	//      = 246
{0x98C, 0x271D},	//sensor_fine_IT_max_margin (A)
{0x990, 0x008B},	//      = 139
{0x98C, 0x271F},	//Frame Lines (A)
{0x990, 0x041D},	//      = 1053
{0x98C, 0x2721},	//Line Length (A)
{0x990, 0x0715},	//      = 1813
{0x98C, 0x2723},	//Row Start (B)
{0x990, 0x0004},	//      = 4
{0x98C, 0x2725},	//Column Start (B)
{0x990, 0x0004},	//      = 4
{0x98C, 0x2727},	//Row End (B)
{0x990, 0x04BB},	//      = 1211
{0x98C, 0x2729},	//Column End (B)
{0x990, 0x064B},	//      = 1611
{0x98C, 0x272B},	//Row Speed (B)
{0x990, 0x0111},	//      = 273
{0x98C, 0x272D},	//Read Mode (B)
{0x990, 0x0024},	//      = 36
{0x98C, 0x272F},	//sensor_fine_correction (B)
{0x990, 0x003A},	//      = 58
{0x98C, 0x2731},	//sensor_fine_IT_min (B)
{0x990, 0x00F6},	//      = 246
{0x98C, 0x2733},	//sensor_fine_IT_max_margin (B)
{0x990, 0x008B},	//      = 139
{0x98C, 0x2735},	//Frame Lines (B)
{0x990, 0x050D},	//      = 1293
{0x98C, 0x2737},	//Line Length (B)
{0x990, 0x0807},	//      = 2055
{0x98C, 0x2739},	//Crop_X0 (A)
{0x990, 0x0000},	//      = 0
{0x98C, 0x273B},	//Crop_X1 (A)
{0x990, 0x04FF},	//      = 1279
{0x98C, 0x273D},	//Crop_Y0 (A)
{0x990, 0x0000},	//      = 0
{0x98C, 0x273F},	//Crop_Y1 (A)
{0x990, 0x03BF},	//      = 959
{0x98C, 0x2747},	//Crop_X0 (B)
{0x990, 0x0000},	//      = 0
{0x98C, 0x2749},	//Crop_X1 (B)
{0x990, 0x063F},	//      = 1599
{0x98C, 0x274B},	//Crop_Y0 (B)
{0x990, 0x0000},	//      = 0
{0x98C, 0x274D},	//Crop_Y1 (B)
{0x990, 0x04AF},	//      = 1199

{0x98C, 0x222D},	//R9 Step
{0x990, 0x00C1},	//      = 193
{0x98C, 0xA408},	//search_f1_50
{0x990, 0x002F},	//      = 47
{0x98C, 0xA409},	//search_f2_50
{0x990, 0x0031},	//      = 49
{0x98C, 0xA40A},	//search_f1_60
{0x990, 0x0039},	//      = 57
{0x98C, 0xA40B},	//search_f2_60
{0x990, 0x003B},	//      = 59
{0x98C, 0x2411},	//R9_Step_60 (A)
{0x990, 0x00C1},	//      = 193
{0x98C, 0x2413},	//R9_Step_50 (A)
{0x990, 0x00E8},	//      = 232
{0x98C, 0x2415},	//R9_Step_60 (B)
{0x990, 0x00AA},	//      = 170
{0x98C, 0x2417},	//R9_Step_50 (B)
{0x990, 0x00CC},	//      = 204
{0x98C, 0xA404},	//FD Mode
{0x990, 0x0010},	//      = 16
{0x98C, 0xA40D},	//Stat_min
{0x990, 0x0002},	//      = 2
{0x98C, 0xA40E},	//Stat_max
{0x990, 0x0003},	//      = 3
{0x98C, 0xA410},	//Min_amplitude
{0x990, 0x000A},	//      = 10

// AE setting
{0x098C, 0xA117},	// MCU_ADDRESS [SEQ_PREVIEW_0_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA11D},	// MCU_ADDRESS [SEQ_PREVIEW_1_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA129},	// MCU_ADDRESS [SEQ_PREVIEW_3_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA216},	// MCU_ADDRESS [AE_MAXGAIN23]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20E},	// MCU_ADDRESS [AE_MAX_VIRTGAIN]
{0x0990, 0x0070},	// MCU_DATA_0  //0x0080  //Compal Carl 2011.09.14 tune
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x00A4},	// MCU_DATA_0

// LSC updated
// Lens register settings for A-2031SOC (MT9D115) REV1
{0x364E, 0x0750},	// P_GR_P0Q0
{0x3650, 0x014D},	// P_GR_P0Q1
{0x3652, 0x6D92},	// P_GR_P0Q2
{0x3654, 0xF6CF},	// P_GR_P0Q3
{0x3656, 0xE153},	// P_GR_P0Q4
{0x3658, 0x00D0},	// P_RD_P0Q0
{0x365A, 0x6B0C},	// P_RD_P0Q1
{0x365C, 0x0213},	// P_RD_P0Q2
{0x365E, 0xABED},	// P_RD_P0Q3
{0x3660, 0xF293},	// P_RD_P0Q4
{0x3662, 0x0230},	// P_BL_P0Q0
{0x3664, 0x264C},	// P_BL_P0Q1
{0x3666, 0x37D2},	// P_BL_P0Q2
{0x3668, 0x580B},	// P_BL_P0Q3
{0x366A, 0x88F3},	// P_BL_P0Q4
{0x366C, 0x0190},	// P_GB_P0Q0
{0x366E, 0x31EC},	// P_GB_P0Q1
{0x3670, 0x6D12},	// P_GB_P0Q2
{0x3672, 0xDBAE},	// P_GB_P0Q3
{0x3674, 0xF2F3},	// P_GB_P0Q4
{0x3676, 0x6E06},	// P_GR_P1Q0
{0x3678, 0xE36E},	// P_GR_P1Q1
{0x367A, 0x0EE8},	// P_GR_P1Q2
{0x367C, 0x2B10},	// P_GR_P1Q3
{0x367E, 0x08F2},	// P_GR_P1Q4
{0x3680, 0x4A2C},	// P_RD_P1Q0
{0x3682, 0x8D2E},	// P_RD_P1Q1
{0x3684, 0x7D11},	// P_RD_P1Q2
{0x3686, 0x42F2},	// P_RD_P1Q3
{0x3688, 0xFDD4},	// P_RD_P1Q4
{0x368A, 0xB04D},	// P_BL_P1Q0
{0x368C, 0xCC2C},	// P_BL_P1Q1
{0x368E, 0xE06F},	// P_BL_P1Q2
{0x3690, 0xB38F},	// P_BL_P1Q3
{0x3692, 0x3533},	// P_BL_P1Q4
{0x3694, 0xFFAD},	// P_GB_P1Q0
{0x3696, 0x088F},	// P_GB_P1Q1
{0x3698, 0x8E90},	// P_GB_P1Q2
{0x369A, 0xB9D1},	// P_GB_P1Q3
{0x369C, 0x3673},	// P_GB_P1Q4
{0x369E, 0x2773},	// P_GR_P2Q0
{0x36A0, 0xA351},	// P_GR_P2Q1
{0x36A2, 0xA1B6},	// P_GR_P2Q2
{0x36A4, 0x4BF4},	// P_GR_P2Q3
{0x36A6, 0x6438},	// P_GR_P2Q4
{0x36A8, 0x2D53},	// P_RD_P2Q0
{0x36AA, 0x9DEF},	// P_RD_P2Q1
{0x36AC, 0xA916},	// P_RD_P2Q2
{0x36AE, 0x10B3},	// P_RD_P2Q3
{0x36B0, 0x6818},	// P_RD_P2Q4
{0x36B2, 0x0EF3},	// P_BL_P2Q0
{0x36B4, 0x3BB0},	// P_BL_P2Q1
{0x36B6, 0xFDF5},	// P_BL_P2Q2
{0x36B8, 0xE894},	// P_BL_P2Q3
{0x36BA, 0x57F8},	// P_BL_P2Q4
{0x36BC, 0x2A13},	// P_GB_P2Q0
{0x36BE, 0x5931},	// P_GB_P2Q1
{0x36C0, 0x9D76},	// P_GB_P2Q2
{0x36C2, 0xF333},	// P_GB_P2Q3
{0x36C4, 0x0059},	// P_GB_P2Q4
{0x36C6, 0xCE2E},	// P_GR_P3Q0
{0x36C8, 0x726E},	// P_GR_P3Q1
{0x36CA, 0x7DD3},	// P_GR_P3Q2
{0x36CC, 0x2D6E},	// P_GR_P3Q3
{0x36CE, 0xAA15},	// P_GR_P3Q4
{0x36D0, 0x2370},	// P_RD_P3Q0
{0x36D2, 0x1472},	// P_RD_P3Q1
{0x36D4, 0x8196},	// P_RD_P3Q2
{0x36D6, 0x88D5},	// P_RD_P3Q3
{0x36D8, 0x1079},	// P_RD_P3Q4
{0x36DA, 0x7E0D},	// P_BL_P3Q0
{0x36DC, 0xB24F},	// P_BL_P3Q1
{0x36DE, 0x6A93},	// P_BL_P3Q2
{0x36E0, 0x4875},	// P_BL_P3Q3
{0x36E2, 0x8478},	// P_BL_P3Q4
{0x36E4, 0x2ECF},	// P_GB_P3Q0
{0x36E6, 0xCD72},	// P_GB_P3Q1
{0x36E8, 0x1AB4},	// P_GB_P3Q2
{0x36EA, 0x30F6},	// P_GB_P3Q3
{0x36EC, 0xA696},	// P_GB_P3Q4
{0x36EE, 0x98D5},	// P_GR_P4Q0
{0x36F0, 0x12F5},	// P_GR_P4Q1
{0x36F2, 0x65B8},	// P_GR_P4Q2
{0x36F4, 0xF557},	// P_GR_P4Q3
{0x36F6, 0xC830},	// P_GR_P4Q4
{0x36F8, 0x8835},	// P_RD_P4Q0
{0x36FA, 0x6B4F},	// P_RD_P4Q1
{0x36FC, 0x5398},	// P_RD_P4Q2
{0x36FE, 0x3716},	// P_RD_P4Q3
{0x3700, 0xD679},	// P_RD_P4Q4
{0x3702, 0x8195},	// P_BL_P4Q0
{0x3704, 0xA553},	// P_BL_P4Q1
{0x3706, 0x60B8},	// P_BL_P4Q2
{0x3708, 0x39B8},	// P_BL_P4Q3
{0x370A, 0xB25A},	// P_BL_P4Q4
{0x370C, 0x9DB5},	// P_GB_P4Q0
{0x370E, 0xD275},	// P_GB_P4Q1
{0x3710, 0x3298},	// P_GB_P4Q2
{0x3712, 0x2A78},	// P_GB_P4Q3
{0x3714, 0xA6F9},	// P_GB_P4Q4
{0x3644, 0x0320},	// POLY_ORIGIN_C
{0x3642, 0x0264},	// POLY_ORIGIN_R
{0x3210, 0x01B8},

// Kernel setting
{0x098C, 0xAB36},	// MCU_ADDRESS [HG_CLUSTERDC_TH]
{0x0990, 0x0014},	// MCU_DATA_0
{0x098C, 0x2B66},	// MCU_ADDRESS [HG_CLUSTER_DC_BM]
{0x0990, 0x2AF8},	// MCU_DATA_0
{0x098C, 0xAB20},	// MCU_ADDRESS [HG_LL_SAT1]
{0x0990, 0x0040},	// MCU_DATA_0  //normal light SAT  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB24},	// MCU_ADDRESS [HG_LL_SAT2]
{0x0990, 0x0000},	// MCU_DATA_0  //low light SAT
{0x098C, 0xAB21},	// MCU_ADDRESS [HG_LL_INTERPTHRESH1]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB25},	// MCU_ADDRESS [HG_LL_INTERPTHRESH2]
{0x0990, 0x002A},	// MCU_DATA_0
{0x098C, 0xAB22},	// MCU_ADDRESS [HG_LL_APCORR1]
{0x0990, 0x0006},	// MCU_DATA_0  //normal light sharpness:0~7  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB26},	// MCU_ADDRESS [HG_LL_APCORR2]
{0x0990, 0x0002},	// MCU_DATA_0  //low light sharpness:0~7  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB23},	// MCU_ADDRESS [HG_LL_APTHRESH1]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xAB27},	// MCU_ADDRESS [HG_LL_APTHRESH2]
{0x0990, 0x0009},	// MCU_DATA_0
{0x098C, 0x2B28},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTART]
{0x0990, 0x0BB8},	// MCU_DATA_0
{0x098C, 0x2B2A},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTOP]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0xAB2C},	// MCU_ADDRESS [HG_NR_START_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2D},	// MCU_ADDRESS [HG_NR_START_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2E},	// MCU_ADDRESS [HG_NR_START_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2F},	// MCU_ADDRESS [HG_NR_START_OL]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0006},	// MCU_DATA_0
{0x098C, 0xAB34},	// MCU_ADDRESS [HG_NR_GAINSTART]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xAB35},	// MCU_ADDRESS [HG_NR_GAINSTOP]
{0x0990, 0x0091},	// MCU_DATA_0
{0x098C, 0xA765},	// MCU_ADDRESS [MODE_COMMONMODESETTINGS_FILTER_MODE]
{0x0990, 0x0006},	// MCU_DATA_0

//[GAMMA PC]
{0x098C, 0xAB37},	// MCU_ADDRESS [HG_GAMMA_MORPH_CTRL]
{0x0990, 0x0003},	// MCU_DATA_0
{0x098C, 0x2B38},	// MCU_ADDRESS [HG_GAMMASTARTMORPH]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0x2B3A},	// MCU_ADDRESS [HG_GAMMASTOPMORPH]
{0x0990, 0x2D50},	// MCU_DATA_0
{0x098C, 0x2B62},	// MCU_ADDRESS [HG_FTB_START_BM]
{0x0990, 0xFFFE},	// MCU_DATA_0
{0x098C, 0x2B64},	// MCU_ADDRESS [HG_FTB_STOP_BM]
{0x0990, 0xFFFF},	// MCU_DATA_0

/* Compal Indigo-Carl 2011.09.14 tune ++ */
/* Gamma settings */
/*
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0
*/
//contrast=2
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0
/* Compal Indigo-Carl 2011.09.14 tune -- */

// CCM
{0x098C, 0x2306},	// MCU_ADDRESS [AWB_CCM_L_0]
{0x0990, 0x01D6},	// MCU_DATA_0
{0x098C, 0x2308},	// MCU_ADDRESS [AWB_CCM_L_1]
{0x0990, 0xFF89},	// MCU_DATA_0
{0x098C, 0x230A},	// MCU_ADDRESS [AWB_CCM_L_2]
{0x0990, 0xFFA1},	// MCU_DATA_0
{0x098C, 0x230C},	// MCU_ADDRESS [AWB_CCM_L_3]
{0x0990, 0xFF73},	// MCU_DATA_0
{0x098C, 0x230E},	// MCU_ADDRESS [AWB_CCM_L_4]
{0x0990, 0x019C},	// MCU_DATA_0
{0x098C, 0x2310},	// MCU_ADDRESS [AWB_CCM_L_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2312},	// MCU_ADDRESS [AWB_CCM_L_6]
{0x0990, 0xFFB0},	// MCU_DATA_0
{0x098C, 0x2314},	// MCU_ADDRESS [AWB_CCM_L_7]
{0x0990, 0xFF2D},	// MCU_DATA_0
{0x098C, 0x2316},	// MCU_ADDRESS [AWB_CCM_L_8]
{0x0990, 0x0223},	// MCU_DATA_0
{0x098C, 0x2318},       // MCU_ADDRESS [AWB_CCM_L_9]  // red/green gain
{0x0990, 0x0021},
{0x098C, 0x231A},	// MCU_ADDRESS [AWB_CCM_L_10]
{0x0990, 0x0038},	// MCU_DATA_0
{0x098C, 0x231C},	// MCU_ADDRESS [AWB_CCM_RL_0]
{0x0990, 0xFFCD},	// MCU_DATA_0
{0x098C, 0x231E},	// MCU_ADDRESS [AWB_CCM_RL_1]
{0x0990, 0x0023},	// MCU_DATA_0
{0x098C, 0x2320},	// MCU_ADDRESS [AWB_CCM_RL_2]
{0x0990, 0x0010},	// MCU_DATA_0
{0x098C, 0x2322},	// MCU_ADDRESS [AWB_CCM_RL_3]
{0x0990, 0x0026},	// MCU_DATA_0
{0x098C, 0x2324},	// MCU_ADDRESS [AWB_CCM_RL_4]
{0x0990, 0xFFE9},	// MCU_DATA_0
{0x098C, 0x2326},	// MCU_ADDRESS [AWB_CCM_RL_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2328},	// MCU_ADDRESS [AWB_CCM_RL_6]
{0x0990, 0x003A},	// MCU_DATA_0
{0x098C, 0x232A},	// MCU_ADDRESS [AWB_CCM_RL_7]
{0x0990, 0x005D},	// MCU_DATA_0
{0x098C, 0x232C},	// MCU_ADDRESS [AWB_CCM_RL_8]
{0x0990, 0xFF69},	// MCU_DATA_0
{0x098C, 0x232E},	// MCU_ADDRESS [AWB_CCM_RL_9]  // delta red/green gain
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0x2330},	// MCU_ADDRESS [AWB_CCM_RL_10]
{0x0990, 0xFFF4},	// MCU_DATA_0

// continue after powerup stop
{0x098C, 0x2755},	// MCU_ADDRESS [MODE_OUTPUT_FORMAT_A]
{0x0990, 0x0200},	// default value 0x0000
{0x098C, 0x2757},	// MCU_ADDRESS [MODE_OUTPUT_FORMAT_B]
{0x0990, 0x0200},	// default value 0x0000
{SENSOR_WAIT_MS, 50},	// delay=50

// LOAD=Continue
// clear powerup stop bit
// BITFIELD=0x0018, 0x0004, 0
{0x0018, 0x0028},	// wait for sequencer to enter preview state

//POLL_FIELD=SEQ_STATE,!=3,DELAY=10,TIMEOUT=100
{SENSOR_WAIT_MS, 100},

{0x098C, 0xA36D},	// MCU_ADDRESS [AWB_EDGETH_MIN]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xA24B},	// MCU_ADDRESS [AE_TARGETMAX]
{0x0990, 0x0096},	// MCU_DATA_0
{0x098C, 0xA24A},	// MCU_ADDRESS [AE_TARGETMIN]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xA24F},       // MCU_ADDRESS [AE_BASETARGET]
{0x0990, 0x0038},	//Compal Carl 2011.09.14 tune  //0x0032  //0915
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0030},	// MCU_DATA_0
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20C},	// MCU_ADDRESS [AE_MAX_INDEX]
{0x0990, 0x0010},	// 60hZ
{0x098C, 0xA215},	// MCU_ADDRESS [AE_INDEX_TH23]
{0x0990, 0x0004},	// MCU_DATA_0

// to overcome AE over expose when LV16 and LV17   2011. 01. 04
{0x098C, 0xA768},	// MCU_ADDRESS [MODE_MIN_IT_TIME_LIMIT]
{0x0990, 0x0000},	// MCU_DATA_0

// to reduce green at CWF 2011. 01. 04
{0x098C, 0xA363},	// MCU_ADDRESS [AWB_TG_MIN0]
{0x0990, 0x00C9},	// MCU_DATA_0

{0x098C, 0xA369},	// MCU_ADDRESS [AWB_KR_R]
{0x0990, 0x0080},	// MCU_DATA_0 // to increase red at day light 2011.01.25
{SENSOR_WAIT_MS, 50},

// syncronize the FW with the sensor
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x098C, 0xA103},	// MCU_ADDRES
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x001e, 0x0505},
{0x3400, 0x7A20},	// set to discontinous clock
{SENSOR_TABLE_END, 0x0000}
}; // End of mode_1280x960[]
//#endif  // for CTS 2012.04.21
/* Compal Indigo-Carl for CTS 2011.07.11 end */

// ===============================================================================================

static struct sensor_reg mode_640x480[] = {
// reset the sensor
{0x001A, 0x0001},
{SENSOR_WAIT_MS, 10},
{0x001A, 0x0000},
{SENSOR_WAIT_MS, 50},

// select output interface
{0x001A, 0x0050},	// BITFIELD=0x001A, 0x0200, 0 // disable Parallel
{0x001A, 0x0058},	// BITFIELD=0x001A, 0x0008, 1 // MIPI

// program the on-chip PLL
{0x0014, 0x21F9},	// PLL Control: BYPASS PLL = 8697

// mipi timing for YUV422 (clk_txfifo_wr = 85/42.5Mhz; clk_txfifo_rd = 63.75Mhz)
{0x0010, 0x0115},	// PLL Dividers = 277
{0x0012, 0x00F5},	// wcd = 8

{0x0014, 0x2545},	// PLL Control: TEST_BYPASS on = 9541
{0x0014, 0x2547},	// PLL Control: PLL_ENABLE on = 9543
{0x0014, 0x2447},	// PLL Control: SEL_LOCK_DET on
{SENSOR_WAIT_MS, 1},
{0x0014, 0x2047},	// PLL Control: PLL_BYPASS off
{0x0014, 0x2046},	// PLL Control: TEST_BYPASS off

// enable powerup stop
{0x0018, 0x402D},	// LOAD=MCU Powerup Stop Enable
{SENSOR_WAIT_MS, 10},

{0x0018, 0x402C},	// LOAD=GO // release MCU from standby
{SENSOR_WAIT_MS, 10},

// sensor code & flicker timings
{0x098C, 0x2703},	// Output Width (A)
{0x0990, 0x0280},	//       = 640
{0x098C, 0x2705},	// Output Height (A)
{0x0990, 0x01E0},	//       = 480

{0x098C, 0x2707},	// Output Width (B)
{0x0990, 0x0640},	//       = 1600
{0x098C, 0x2709},	// Output Height (B)
{0x0990, 0x04B0},	//       = 1200

{0x098C, 0x270D},	// Row Start (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x270F},	// Column Start (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2711},	// Row End (A)
{0x0990, 0x04BD},	//       = 1213
{0x098C, 0x2713},	// Column End (A)
{0x0990, 0x064D},	//       = 1613
{0x098C, 0x2715},	// Row Speed (A)
{0x0990, 0x0111},	//       = 273
{0x098C, 0x2717},	// Read Mode (A)
{0x0990, 0x046C},	//       = 1132
//{0x990, 0x046D},	//      = 1133 (Mirror)

{0x098C, 0x2719},	// sensor_fine_correction (A)
{0x0990, 0x005A},	//       = 90
{0x098C, 0x271B},	// sensor_fine_IT_min (A)
{0x0990, 0x01BE},	//       = 446
{0x098C, 0x271D},	// sensor_fine_IT_max_margin (A)
{0x0990, 0x0131},	//       = 305
{0x098C, 0x271F},	// Frame Lines (A)
{0x0990, 0x02C3},	//       = 707
{0x098C, 0x2721},	// Line Length (A)
{0x0990, 0x07BC},	//       = 1980

{0x098C, 0x2723},	// Row Start (B)
{0x0990, 0x0004},	//       = 4
{0x098C, 0x2725},	// Column Start (B)
{0x0990, 0x0004},	//       = 4
{0x098C, 0x2727},	// Row End (B)
{0x0990, 0x04BB},	//       = 1211
{0x098C, 0x2729},	// Column End (B)
{0x0990, 0x064B},	//       = 1611
{0x098C, 0x272B},	// Row Speed (B)
{0x0990, 0x0111},	//       = 273
{0x098C, 0x272D},	// Read Mode (B)
{0x0990, 0x0024},	//       = 36
{0x098C, 0x272F},	// sensor_fine_correction (B)
{0x0990, 0x003A},	//       = 58
{0x098C, 0x2731},	// sensor_fine_IT_min (B)
{0x0990, 0x00F6},	//       = 246
{0x098C, 0x2733},	// sensor_fine_IT_max_margin (B)
{0x0990, 0x008B},	//       = 139
{0x098C, 0x2735},	// Frame Lines (B)
{0x0990, 0x0521},	//       = 1313
{0x098C, 0x2737},	// Line Length (B)
{0x0990, 0x08EC},	//       = 2284

{0x098C, 0x2739},	// Crop_X0 (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x273B},	// Crop_X1 (A)
{0x0990, 0x031F},	//       = 799
{0x098C, 0x273D},	// Crop_Y0 (A)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x273F},	// Crop_Y1 (A)
{0x0990, 0x0257},	//       = 599
{0x098C, 0x2747},	// Crop_X0 (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x2749},	// Crop_X1 (B)
{0x0990, 0x063F},	//       = 1599
{0x098C, 0x274B},	// Crop_Y0 (B)
{0x0990, 0x0000},	//       = 0
{0x098C, 0x274D},	// Crop_Y1 (B)
{0x0990, 0x04AF},	//       = 1199

{0x098C, 0x222D},	// R9 Step
{0x0990, 0x00D4},	//       = 212
{0x098C, 0xA408},	// search_f1_50
{0x0990, 0x0034},	//       = 52
{0x098C, 0xA409},	// search_f2_50
{0x0990, 0x0036},	//       = 54
{0x098C, 0xA40A},	// search_f1_60
{0x0990, 0x003E},	//       = 62
{0x098C, 0xA40B},	// search_f2_60
{0x0990, 0x0040},	//       = 64
{0x098C, 0x2411},	// R9_Step_60 (A)
{0x0990, 0x00D4},	//       = 212
{0x098C, 0x2413},	// R9_Step_50 (A)
{0x0990, 0x00FF},	//       = 255

{0x098C, 0xA404},	// FD Mode
{0x0990, 0x0010},	//       = 16
{0x098C, 0xA40D},	// Stat_min
{0x0990, 0x0002},	//       = 2
{0x098C, 0xA40E},	// Stat_max
{0x0990, 0x0003},	//       = 3
{0x098C, 0xA410},	// Min_amplitude
{0x0990, 0x000A},	//       = 10

// AE setting
{0x098C, 0xA117},	// MCU_ADDRESS [SEQ_PREVIEW_0_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA11D},	// MCU_ADDRESS [SEQ_PREVIEW_1_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA129},	// MCU_ADDRESS [SEQ_PREVIEW_3_AE]
{0x0990, 0x0002},	// MCU_DATA_0
{0x098C, 0xA216},	// MCU_ADDRESS [AE_MAXGAIN23]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20E},	// MCU_ADDRESS [AE_MAX_VIRTGAIN]
{0x0990, 0x0070},	// MCU_DATA_0  //0x0080  //Compal Carl 2011.09.14 tune
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x00A4},	// MCU_DATA_0

// LSC updated
// Lens register settings for A-2031SOC (MT9D115) REV1
{0x364E, 0x0750},	// P_GR_P0Q0
{0x3650, 0x014D},	// P_GR_P0Q1
{0x3652, 0x6D92},	// P_GR_P0Q2
{0x3654, 0xF6CF},	// P_GR_P0Q3
{0x3656, 0xE153},	// P_GR_P0Q4
{0x3658, 0x00D0},	// P_RD_P0Q0
{0x365A, 0x6B0C},	// P_RD_P0Q1
{0x365C, 0x0213},	// P_RD_P0Q2
{0x365E, 0xABED},	// P_RD_P0Q3
{0x3660, 0xF293},	// P_RD_P0Q4
{0x3662, 0x0230},	// P_BL_P0Q0
{0x3664, 0x264C},	// P_BL_P0Q1
{0x3666, 0x37D2},	// P_BL_P0Q2
{0x3668, 0x580B},	// P_BL_P0Q3
{0x366A, 0x88F3},	// P_BL_P0Q4
{0x366C, 0x0190},	// P_GB_P0Q0
{0x366E, 0x31EC},	// P_GB_P0Q1
{0x3670, 0x6D12},	// P_GB_P0Q2
{0x3672, 0xDBAE},	// P_GB_P0Q3
{0x3674, 0xF2F3},	// P_GB_P0Q4
{0x3676, 0x6E06},	// P_GR_P1Q0
{0x3678, 0xE36E},	// P_GR_P1Q1
{0x367A, 0x0EE8},	// P_GR_P1Q2
{0x367C, 0x2B10},	// P_GR_P1Q3
{0x367E, 0x08F2},	// P_GR_P1Q4
{0x3680, 0x4A2C},	// P_RD_P1Q0
{0x3682, 0x8D2E},	// P_RD_P1Q1
{0x3684, 0x7D11},	// P_RD_P1Q2
{0x3686, 0x42F2},	// P_RD_P1Q3
{0x3688, 0xFDD4},	// P_RD_P1Q4
{0x368A, 0xB04D},	// P_BL_P1Q0
{0x368C, 0xCC2C},	// P_BL_P1Q1
{0x368E, 0xE06F},	// P_BL_P1Q2
{0x3690, 0xB38F},	// P_BL_P1Q3
{0x3692, 0x3533},	// P_BL_P1Q4
{0x3694, 0xFFAD},	// P_GB_P1Q0
{0x3696, 0x088F},	// P_GB_P1Q1
{0x3698, 0x8E90},	// P_GB_P1Q2
{0x369A, 0xB9D1},	// P_GB_P1Q3
{0x369C, 0x3673},	// P_GB_P1Q4
{0x369E, 0x2773},	// P_GR_P2Q0
{0x36A0, 0xA351},	// P_GR_P2Q1
{0x36A2, 0xA1B6},	// P_GR_P2Q2
{0x36A4, 0x4BF4},	// P_GR_P2Q3
{0x36A6, 0x6438},	// P_GR_P2Q4
{0x36A8, 0x2D53},	// P_RD_P2Q0
{0x36AA, 0x9DEF},	// P_RD_P2Q1
{0x36AC, 0xA916},	// P_RD_P2Q2
{0x36AE, 0x10B3},	// P_RD_P2Q3
{0x36B0, 0x6818},	// P_RD_P2Q4
{0x36B2, 0x0EF3},	// P_BL_P2Q0
{0x36B4, 0x3BB0},	// P_BL_P2Q1
{0x36B6, 0xFDF5},	// P_BL_P2Q2
{0x36B8, 0xE894},	// P_BL_P2Q3
{0x36BA, 0x57F8},	// P_BL_P2Q4
{0x36BC, 0x2A13},	// P_GB_P2Q0
{0x36BE, 0x5931},	// P_GB_P2Q1
{0x36C0, 0x9D76},	// P_GB_P2Q2
{0x36C2, 0xF333},	// P_GB_P2Q3
{0x36C4, 0x0059},	// P_GB_P2Q4
{0x36C6, 0xCE2E},	// P_GR_P3Q0
{0x36C8, 0x726E},	// P_GR_P3Q1
{0x36CA, 0x7DD3},	// P_GR_P3Q2
{0x36CC, 0x2D6E},	// P_GR_P3Q3
{0x36CE, 0xAA15},	// P_GR_P3Q4
{0x36D0, 0x2370},	// P_RD_P3Q0
{0x36D2, 0x1472},	// P_RD_P3Q1
{0x36D4, 0x8196},	// P_RD_P3Q2
{0x36D6, 0x88D5},	// P_RD_P3Q3
{0x36D8, 0x1079},	// P_RD_P3Q4
{0x36DA, 0x7E0D},	// P_BL_P3Q0
{0x36DC, 0xB24F},	// P_BL_P3Q1
{0x36DE, 0x6A93},	// P_BL_P3Q2
{0x36E0, 0x4875},	// P_BL_P3Q3
{0x36E2, 0x8478},	// P_BL_P3Q4
{0x36E4, 0x2ECF},	// P_GB_P3Q0
{0x36E6, 0xCD72},	// P_GB_P3Q1
{0x36E8, 0x1AB4},	// P_GB_P3Q2
{0x36EA, 0x30F6},	// P_GB_P3Q3
{0x36EC, 0xA696},	// P_GB_P3Q4
{0x36EE, 0x98D5},	// P_GR_P4Q0
{0x36F0, 0x12F5},	// P_GR_P4Q1
{0x36F2, 0x65B8},	// P_GR_P4Q2
{0x36F4, 0xF557},	// P_GR_P4Q3
{0x36F6, 0xC830},	// P_GR_P4Q4
{0x36F8, 0x8835},	// P_RD_P4Q0
{0x36FA, 0x6B4F},	// P_RD_P4Q1
{0x36FC, 0x5398},	// P_RD_P4Q2
{0x36FE, 0x3716},	// P_RD_P4Q3
{0x3700, 0xD679},	// P_RD_P4Q4
{0x3702, 0x8195},	// P_BL_P4Q0
{0x3704, 0xA553},	// P_BL_P4Q1
{0x3706, 0x60B8},	// P_BL_P4Q2
{0x3708, 0x39B8},	// P_BL_P4Q3
{0x370A, 0xB25A},	// P_BL_P4Q4
{0x370C, 0x9DB5},	// P_GB_P4Q0
{0x370E, 0xD275},	// P_GB_P4Q1
{0x3710, 0x3298},	// P_GB_P4Q2
{0x3712, 0x2A78},	// P_GB_P4Q3
{0x3714, 0xA6F9},	// P_GB_P4Q4
{0x3644, 0x0320},	// POLY_ORIGIN_C
{0x3642, 0x0264},	// POLY_ORIGIN_R
{0x3210, 0x01B8},

// Kernel setting
{0x098C, 0xAB36},	// MCU_ADDRESS [HG_CLUSTERDC_TH]
{0x0990, 0x0014},	// MCU_DATA_0
{0x098C, 0x2B66},	// MCU_ADDRESS [HG_CLUSTER_DC_BM]
{0x0990, 0x2AF8},	// MCU_DATA_0
{0x098C, 0xAB20},	// MCU_ADDRESS [HG_LL_SAT1]
{0x0990, 0x0040},	// MCU_DATA_0  //normal light SAT  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB24},	// MCU_ADDRESS [HG_LL_SAT2]
{0x0990, 0x0000},	// MCU_DATA_0  //low light SAT
{0x098C, 0xAB21},	// MCU_ADDRESS [HG_LL_INTERPTHRESH1]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB25},	// MCU_ADDRESS [HG_LL_INTERPTHRESH2]
{0x0990, 0x002A},	// MCU_DATA_0
{0x098C, 0xAB22},	// MCU_ADDRESS [HG_LL_APCORR1]
{0x0990, 0x0006},	// MCU_DATA_0  //normal light sharpness:0~7  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB26},	// MCU_ADDRESS [HG_LL_APCORR2]
{0x0990, 0x0002},	// MCU_DATA_0  //low light sharpness:0~7  //Compal Carl 2011.09.14 tune
{0x098C, 0xAB23},	// MCU_ADDRESS [HG_LL_APTHRESH1]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xAB27},	// MCU_ADDRESS [HG_LL_APTHRESH2]
{0x0990, 0x0009},	// MCU_DATA_0
{0x098C, 0x2B28},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTART]
{0x0990, 0x0BB8},	// MCU_DATA_0
{0x098C, 0x2B2A},	// MCU_ADDRESS [HG_LL_BRIGHTNESSSTOP]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0xAB2C},	// MCU_ADDRESS [HG_NR_START_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2D},	// MCU_ADDRESS [HG_NR_START_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2E},	// MCU_ADDRESS [HG_NR_START_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB2F},	// MCU_ADDRESS [HG_NR_START_OL]
{0x0990, 0x000A},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0006},	// MCU_DATA_0
{0x098C, 0xAB34},	// MCU_ADDRESS [HG_NR_GAINSTART]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xAB35},	// MCU_ADDRESS [HG_NR_GAINSTOP]
{0x0990, 0x0091},	// MCU_DATA_0
{0x098C, 0xA765},	// MCU_ADDRESS [MODE_COMMONMODESETTINGS_FILTER_MODE]
{0x0990, 0x0006},	// MCU_DATA_0

//[GAMMA PC]
{0x098C, 0xAB37},	// MCU_ADDRESS [HG_GAMMA_MORPH_CTRL]
{0x0990, 0x0003},	// MCU_DATA_0
{0x098C, 0x2B38},	// MCU_ADDRESS [HG_GAMMASTARTMORPH]
{0x0990, 0x2968},	// MCU_DATA_0
{0x098C, 0x2B3A},	// MCU_ADDRESS [HG_GAMMASTOPMORPH]
{0x0990, 0x2D50},	// MCU_DATA_0
{0x098C, 0x2B62},	// MCU_ADDRESS [HG_FTB_START_BM]
{0x0990, 0xFFFE},	// MCU_DATA_0
{0x098C, 0x2B64},	// MCU_ADDRESS [HG_FTB_STOP_BM]
{0x0990, 0xFFFF},	// MCU_DATA_0

/* Compal Indigo-Carl 2011.09.14 tune ++ */
/* Gamma settings */
/* 
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x000F}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0020}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x0035}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x006D}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0084}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x0097}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00A6}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00B3}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00BE}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00C8}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00D0}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00D8}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00E5}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00F5}, 	// MCU_DATA_0
*/
//contrast=2
{0x098C, 0xAB3C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB3D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB3E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB3F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB40}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB41}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB42}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB43}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB44}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB45}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB46}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB47}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB48}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB49}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB4A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB4B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB4C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB4D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB4E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_A_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0

{0x098C, 0xAB4F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_0]
{0x0990, 0x0000}, 	// MCU_DATA_0
{0x098C, 0xAB50}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_1]
{0x0990, 0x0005}, 	// MCU_DATA_0
{0x098C, 0xAB51}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_2]
{0x0990, 0x0010}, 	// MCU_DATA_0
{0x098C, 0xAB52}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_3]
{0x0990, 0x002B}, 	// MCU_DATA_0
{0x098C, 0xAB53}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_4]
{0x0990, 0x0053}, 	// MCU_DATA_0
{0x098C, 0xAB54}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_5]
{0x0990, 0x0079}, 	// MCU_DATA_0
{0x098C, 0xAB55}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_6]
{0x0990, 0x0099}, 	// MCU_DATA_0
{0x098C, 0xAB56}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_7]
{0x0990, 0x00B0}, 	// MCU_DATA_0
{0x098C, 0xAB57}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_8]
{0x0990, 0x00C0}, 	// MCU_DATA_0
{0x098C, 0xAB58}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_9]
{0x0990, 0x00CD}, 	// MCU_DATA_0
{0x098C, 0xAB59}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_10]
{0x0990, 0x00D7}, 	// MCU_DATA_0
{0x098C, 0xAB5A}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_11]
{0x0990, 0x00DF}, 	// MCU_DATA_0
{0x098C, 0xAB5B}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_12]
{0x0990, 0x00E6}, 	// MCU_DATA_0
{0x098C, 0xAB5C}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_13]
{0x0990, 0x00EB}, 	// MCU_DATA_0
{0x098C, 0xAB5D}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_14]
{0x0990, 0x00F0}, 	// MCU_DATA_0
{0x098C, 0xAB5E}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_15]
{0x0990, 0x00F4}, 	// MCU_DATA_0
{0x098C, 0xAB5F}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_16]
{0x0990, 0x00F8}, 	// MCU_DATA_0
{0x098C, 0xAB60}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_17]
{0x0990, 0x00FC}, 	// MCU_DATA_0
{0x098C, 0xAB61}, 	// MCU_ADDRESS [HG_GAMMA_TABLE_B_18]
{0x0990, 0x00FF}, 	// MCU_DATA_0
/* Compal Indigo-Carl 2011.09.14 tune -- */

// CCM
{0x098C, 0x2306},	// MCU_ADDRESS [AWB_CCM_L_0]
{0x0990, 0x01D6},	// MCU_DATA_0
{0x098C, 0x2308},	// MCU_ADDRESS [AWB_CCM_L_1]
{0x0990, 0xFF89},	// MCU_DATA_0
{0x098C, 0x230A},	// MCU_ADDRESS [AWB_CCM_L_2]
{0x0990, 0xFFA1},	// MCU_DATA_0
{0x098C, 0x230C},	// MCU_ADDRESS [AWB_CCM_L_3]
{0x0990, 0xFF73},	// MCU_DATA_0
{0x098C, 0x230E},	// MCU_ADDRESS [AWB_CCM_L_4]
{0x0990, 0x019C},	// MCU_DATA_0
{0x098C, 0x2310},	// MCU_ADDRESS [AWB_CCM_L_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2312},	// MCU_ADDRESS [AWB_CCM_L_6]
{0x0990, 0xFFB0},	// MCU_DATA_0
{0x098C, 0x2314},	// MCU_ADDRESS [AWB_CCM_L_7]
{0x0990, 0xFF2D},	// MCU_DATA_0
{0x098C, 0x2316},	// MCU_ADDRESS [AWB_CCM_L_8]
{0x0990, 0x0223},	// MCU_DATA_0
/* Compal Indigo-Carl begin */
{0x098C, 0x2318},       // MCU_ADDRESS [AWB_CCM_L_9]  // red/green gain
//{0x0990, 0x0024},     // MCU_DATA_0
{0x0990, 0x0021},
/* Compal Indigo-Carl end */
{0x098C, 0x231A},	// MCU_ADDRESS [AWB_CCM_L_10]
{0x0990, 0x0038},	// MCU_DATA_0
{0x098C, 0x231C},	// MCU_ADDRESS [AWB_CCM_RL_0]
{0x0990, 0xFFCD},	// MCU_DATA_0
{0x098C, 0x231E},	// MCU_ADDRESS [AWB_CCM_RL_1]
{0x0990, 0x0023},	// MCU_DATA_0
{0x098C, 0x2320},	// MCU_ADDRESS [AWB_CCM_RL_2]
{0x0990, 0x0010},	// MCU_DATA_0
{0x098C, 0x2322},	// MCU_ADDRESS [AWB_CCM_RL_3]
{0x0990, 0x0026},	// MCU_DATA_0
{0x098C, 0x2324},	// MCU_ADDRESS [AWB_CCM_RL_4]
{0x0990, 0xFFE9},	// MCU_DATA_0
{0x098C, 0x2326},	// MCU_ADDRESS [AWB_CCM_RL_5]
{0x0990, 0xFFF1},	// MCU_DATA_0
{0x098C, 0x2328},	// MCU_ADDRESS [AWB_CCM_RL_6]
{0x0990, 0x003A},	// MCU_DATA_0
{0x098C, 0x232A},	// MCU_ADDRESS [AWB_CCM_RL_7]
{0x0990, 0x005D},	// MCU_DATA_0
{0x098C, 0x232C},	// MCU_ADDRESS [AWB_CCM_RL_8]
{0x0990, 0xFF69},	// MCU_DATA_0
{0x098C, 0x232E},	// MCU_ADDRESS [AWB_CCM_RL_9]  // delta red/green gain
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0x2330},	// MCU_ADDRESS [AWB_CCM_RL_10]
{0x0990, 0xFFF4},	// MCU_DATA_0

// continue after powerup stop
{0x098C, 0x2755},	// MCU_ADDRESS [MODE_OUTPUT_FORMAT_A]
{0x0990, 0x0200},	// default value 0x0000
{0x098C, 0x2757},	// MCU_ADDRESS [MODE_OUTPUT_FORMAT_B]
{0x0990, 0x0200},	// default value 0x0000
{SENSOR_WAIT_MS, 50},	// delay=50

// LOAD=Continue
// clear powerup stop bit
// BITFIELD=0x0018, 0x0004, 0
{0x0018, 0x0028},	// wait for sequencer to enter preview state

//POLL_FIELD=SEQ_STATE,!=3,DELAY=10,TIMEOUT=100
{SENSOR_WAIT_MS, 100},

{0x098C, 0xA36D},	// MCU_ADDRESS [AWB_EDGETH_MIN]
{0x0990, 0x0004},	// MCU_DATA_0
{0x098C, 0xA24B},	// MCU_ADDRESS [AE_TARGETMAX]
{0x0990, 0x0096},	// MCU_DATA_0
{0x098C, 0xA24A},	// MCU_ADDRESS [AE_TARGETMIN]
{0x0990, 0x0020},	// MCU_DATA_0
{0x098C, 0xA24F},       // MCU_ADDRESS [AE_BASETARGET]
{0x0990, 0x0038},	//Compal Carl 2011.09.14 tune  //0x0032  //0915
{0x098C, 0xAB30},	// MCU_ADDRESS [HG_NR_STOP_R]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB31},	// MCU_ADDRESS [HG_NR_STOP_G]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB32},	// MCU_ADDRESS [HG_NR_STOP_B]
{0x0990, 0x00FF},	// MCU_DATA_0
{0x098C, 0xAB33},	// MCU_ADDRESS [HG_NR_STOP_OL]
{0x0990, 0x0030},	// MCU_DATA_0
{0x098C, 0x2212},	// MCU_ADDRESS [AE_MAX_DGAIN_AE1]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA20C},	// MCU_ADDRESS [AE_MAX_INDEX]
{0x0990, 0x0010},	// 60hZ
{0x098C, 0xA215},	// MCU_ADDRESS [AE_INDEX_TH23]
{0x0990, 0x0004},	// MCU_DATA_0

// to overcome AE over expose when LV16 and LV17   2011. 01. 04
{0x098C, 0xA768},	// MCU_ADDRESS [MODE_MIN_IT_TIME_LIMIT]
{0x0990, 0x0000},	// MCU_DATA_0

// to reduce green at CWF 2011. 01. 04
{0x098C, 0xA363},	// MCU_ADDRESS [AWB_TG_MIN0]
{0x0990, 0x00C9},	// MCU_DATA_0

{0x098C, 0xA369},	// MCU_ADDRESS [AWB_KR_R]
{0x0990, 0x0080},	// MCU_DATA_0 // to increase red at day light 2011.01.25
{SENSOR_WAIT_MS, 50},

// syncronize the FW with the sensor
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x098C, 0xA103},	// MCU_ADDRES
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x001e, 0x0505},
{0x3400, 0x7A20},	// set to discontinous clock
{SENSOR_TABLE_END, 0x0000}
}; // End of mode_640x480[]

static struct sensor_reg ColorEffect_None[] = {
{0x098C, 0x2759},	// content A
{0x0990, 0x0000},
{0x098C, 0x275B},	// content B
{0x0990, 0x0000},
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg ColorEffect_Mono[] = {
{0x098C, 0x2759},	// content A
{0x0990, 0x0001},
{0x098C, 0x275B},	// content B
{0x0990, 0x0001},
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg ColorEffect_Sepia[] = {
{0x098C, 0x2759},	// content A
{0x0990, 0x0002},
{0x098C, 0x275B},	// content B
{0x0990, 0x0002},
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg ColorEffect_Negative[] = {
{0x098C, 0x2759},	// content A
{0x0990, 0x0003},
{0x098C, 0x275B},	// content B
{0x0990, 0x0003},
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg ColorEffect_Solarize[] = {
/* Compal Indigo-Carl begin */
/* to fix black dots bug */
{0x098C, 0x2759},	// content A
//{0x0990, 0x0004},
{0x0990, 0x4004},	// threshold
{0x098C, 0x275B},	// content B
//{0x0990, 0x0004},
{0x0990, 0x4004},	// threshold
/* Compal Indigo-Carl end */
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0006},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

// Sensor ISP Not Support this function
static struct sensor_reg ColorEffect_Posterize[] = {
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Whitebalance_Auto[] = {
{0x098C, 0xA115},	// MCU_ADDRESS [SEQ_CAP_MODE]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA11F},	// MCU_ADDRESS [SEQ_PREVIEW_1_AWB]
{0x0990, 0x0001},	// MCU_DATA_0
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Whitebalance_Incandescent[] = {
{0x098C, 0xA115},	// MCU_ADDRESS [SEQ_CAP_MODE]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA11F},	// MCU_ADDRESS [SEQ_PREVIEW_1_AWB]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x098C, 0xA353},	// MCU_ADDRESS [AWB_CCM_POSITION]
{0x0990, 0x002B},	// MCU_DATA_0
{0x098C, 0xA34E},	// MCU_ADDRESS [AWB_GAIN_R]
{0x0990, 0x007B},	// MCU_DATA_0
{0x098C, 0xA34F},	// MCU_ADDRESS [AWB_GAIN_G]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA350},	// MCU_ADDRESS [AWB_GAIN_B]
{0x0990, 0x007E},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Whitebalance_Daylight[] = {
{0x098C, 0xA115},	// MCU_ADDRESS [SEQ_CAP_MODE]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA11F},	// MCU_ADDRESS [SEQ_PREVIEW_1_AWB]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x098C, 0xA353},	// MCU_ADDRESS [AWB_CCM_POSITION]
{0x0990, 0x007F},	// MCU_DATA_0
{0x098C, 0xA34E},	// MCU_ADDRESS [AWB_GAIN_R]
{0x0990, 0x008E},	// MCU_DATA_0
{0x098C, 0xA34F},	// MCU_ADDRESS [AWB_GAIN_G]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA350},	// MCU_ADDRESS [AWB_GAIN_B]
{0x0990, 0x0074},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Whitebalance_Fluorescent[] = {
{0x098C, 0xA115},	// MCU_ADDRESS [SEQ_CAP_MODE]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA11F},	// MCU_ADDRESS [SEQ_PREVIEW_1_AWB]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x098C, 0xA353},	// MCU_ADDRESS [AWB_CCM_POSITION]
{0x0990, 0x0036},	// MCU_DATA_0
{0x098C, 0xA34E},	// MCU_ADDRESS [AWB_GAIN_R]
{0x0990, 0x0099},	// MCU_DATA_0
{0x098C, 0xA34F},	// MCU_ADDRESS [AWB_GAIN_G]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA350},	// MCU_ADDRESS [AWB_GAIN_B]
{0x0990, 0x007D},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Whitebalance_CloudyDaylight[] = {
{0x098C, 0xA115},	// MCU_ADDRESS [SEQ_CAP_MODE]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA11F},	// MCU_ADDRESS [SEQ_PREVIEW_1_AWB]
{0x0990, 0x0000},	// MCU_DATA_0
{0x098C, 0xA103},	// MCU_ADDRESS [SEQ_CMD]
{0x0990, 0x0005},	// MCU_DATA_0
{SENSOR_WAIT_MS, 100},
{0x098C, 0xA353},	// MCU_ADDRESS [AWB_CCM_POSITION]
{0x0990, 0x0046},	// MCU_DATA_0
{0x098C, 0xA34E},	// MCU_ADDRESS [AWB_GAIN_R]
{0x0990, 0x007D},	// MCU_DATA_0
{0x098C, 0xA34F},	// MCU_ADDRESS [AWB_GAIN_G]
{0x0990, 0x0080},	// MCU_DATA_0
{0x098C, 0xA350},	// MCU_ADDRESS [AWB_GAIN_B]
{0x0990, 0x007E},	// MCU_DATA_0
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Exposure_2[] = {
{0x098C, 0xA24F},
{0x0990, 0x005A},	// 90  //0x0087  //Compal Carl 2011.09.14 tune
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Exposure_1[] = {
{0x098C, 0xA24F},
{0x0990, 0x0046},	// 70  //0x006E  //Compal Carl 2011.09.14 tune
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Exposure_0[] = {
{0x098C, 0xA24F},
{0x0990, 0x0038},	// 50  //origin: 0x005C(92)  //Compal Carl 2011.09.14 tune  //0x0032
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Exposure_Negative_1[] = {
{0x098C, 0xA24F},
{0x0990, 0x0028},	// 40  //0x003C  //Compal Carl 2011.09.14 tune
{SENSOR_TABLE_END, 0x0000}
};

static struct sensor_reg Exposure_Negative_2[] = {
{0x098C, 0xA24F},
{0x0990, 0x001E},	// 30  //0x0023  //Compal Carl 2011.09.14 tune
{SENSOR_TABLE_END, 0x0000}
};


enum {
	SENSOR_MODE_1600x1200,
	SENSOR_MODE_1280x960,	    // Compal Indigo-Carl for CTS 2011.07.11
	SENSOR_MODE_1280x720,
	SENSOR_MODE_640x480,
};

static struct sensor_reg *mode_table[] = {
	[SENSOR_MODE_1600x1200] = mode_1600x1200,
	[SENSOR_MODE_1280x960]  = mode_1280x960,  // Compal Indigo-Carl for CTS 2011.07.11
	[SENSOR_MODE_1280x720]  = mode_1280x720,
	[SENSOR_MODE_640x480]   = mode_640x480,
};

#if defined(__cplusplus)
}
#endif

#endif  // YUV_SENSOR_TAB_H
